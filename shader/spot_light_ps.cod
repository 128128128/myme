//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CAMERA_CONSTANT_BUFFER
// {
//
//   struct CAMERA_CONSTANTS
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//
//   } camera_constants;                // Offset:    0 Size:   352
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   struct POINT_LIGHT
//   {
//       
//       float4 color;                  // Offset:    0
//       float3 position;               // Offset:   16
//       float range;                   // Offset:   28
//
//   } point_light;                     // Offset:    0 Size:    32 [unused]
//   
//   struct SPOT_LIGHT
//   {
//       
//       float3 position;               // Offset:   32
//       float pad;                     // Offset:   44
//       float3 color;                  // Offset:   48
//       float range;                   // Offset:   60
//       float3 direction;              // Offset:   64
//       float angle;                   // Offset:   76
//
//   } spot_light;                      // Offset:   32 Size:    48
//   
//   struct HEMISPHERE_LIGHT
//   {
//       
//       float4 sky_color;              // Offset:   80
//       float4 ground_color;           // Offset:   96
//       float4 ground_normal;          // Offset:  112
//
//   } hemisphere_light;                // Offset:   80 Size:    48 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// linear_sampler_state              sampler      NA          NA             s1      1 
// anisotropic_sampler_state         sampler      NA          NA             s2      1 
// diffuse_map                       texture  float4          2d             t0      1 
// normal_map                        texture  float4          2d             t3      1 
// CAMERA_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float       
// BINORMAL                 0   xyzw        4     NONE   float       
// TEXCOORD                 0   xy          5     NONE   float   xy  
// COLOR                    0   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB4[5], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 4
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v2.xyzx
mul r1.xyz, r0.zxyz, l(0.000000, 0.000000, 1.000100, 0.000000)
mad r1.xyz, r0.yzxy, l(0.000000, 1.000100, 0.000000, 0.000000), -r1.xyzx
dp2 r0.w, r1.yzyy, r1.yzyy
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r0.yzxy, r1.zxyz
mad r2.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v5.xyxx, t3.xyzw, s1
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r3.yyyy
mad r1.xyz, r3.xxxx, r2.xyzx, r1.xyzx
mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -v1.xyzx, cb1[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
add r2.xyz, v1.xyzx, -cb4[2].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r2.w, r1.w
sqrt r1.w, r1.w
mul r2.xyz, r2.wwww, r2.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
dp3 r0.x, r0.xyzx, r2.xyzx
dp3 r0.y, r2.xyzx, cb4[4].xyzx
max r0.x, r0.x, l(0.000000)
mul r1.xyz, r0.xxxx, cb4[3].xyzx
max r0.x, r0.w, l(0.000000)
mul r0.z, r0.x, r0.x
mul r0.x, r0.z, r0.x
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[3].w
mad r0.z, -r0.z, r1.w, l(1.000000)
lt r0.w, r0.z, l(0.000000)
movc r0.z, r0.w, l(0), r0.z
mul r0.w, r0.z, r0.z
mul r0.z, r0.w, r0.z
mul r0.x, r0.z, r0.x
mul r1.xyz, r0.zzzz, r1.xyzx
mad r0.z, |r0.y|, l(-0.018729), l(0.074261)
mad r0.z, r0.z, |r0.y|, l(-0.212114)
mad r0.z, r0.z, |r0.y|, l(1.570729)
add r0.w, -|r0.y|, l(1.000000)
lt r0.y, r0.y, -r0.y
sqrt r0.w, r0.w
mul r1.w, r0.w, r0.z
mad r1.w, r1.w, l(-2.000000), l(3.141593)
and r0.y, r0.y, r1.w
mad r0.y, r0.z, r0.w, r0.y
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb4[4].w
mad r0.y, -r0.z, r0.y, l(1.000000)
rsq r0.y, r0.y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mul r0.x, r0.y, r0.x
mad o0.xyz, r1.xyzx, r0.yyyy, r0.xxxx
sample_indexable(texture2d)(float,float,float,float) r0.x, v5.xyxx, t0.wxyz, s2
mov o0.w, r0.x
ret 
// Approximately 68 instruction slots used
