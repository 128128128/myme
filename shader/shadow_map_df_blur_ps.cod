//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   v2.x <- pin.shadow_param.x; v2.y <- pin.shadow_param.y; v2.z <- pin.shadow_param.z; v2.w <- pin.shadow_param.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 9 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\shadow_map_df_blur_ps.hlsl"
itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 11
itof r0.w, l(0)  // r0.w <- sum

#line 12
mov r1.x, l(-3)  // r1.x <- y
mov r1.yzw, r0.xxyz  // r1.y <- color.x; r1.z <- color.y; r1.w <- color.z
mov r2.x, r0.w  // r2.x <- sum
mov r2.y, r1.x  // r2.y <- y
loop 
  ige r2.z, l(3), r2.y
  breakc_z r2.z

#line 13
  mov r2.z, l(-3)  // r2.z <- x
  mov r3.xyz, r1.yzwy  // r3.x <- color.x; r3.y <- color.y; r3.z <- color.z
  mov r2.w, r2.x  // r2.w <- sum
  mov r3.w, r2.z  // r3.w <- x
  loop 
    ige r4.x, l(3), r3.w
    breakc_z r4.x

#line 14
    itof r4.x, r3.w  // r4.x <- adjust.x
    itof r4.y, r2.y  // r4.y <- adjust.y

#line 16
    dp2 r4.z, r4.xyxx, r4.xyxx
    sqrt r4.z, r4.z
    div r4.z, r4.z, l(3.500000)  // r4.z <- d

#line 17
    max r4.z, r4.z, l(0.000000)
    min r4.z, r4.z, l(1.000000)
    mov r4.z, -r4.z
    add r4.z, r4.z, l(1.000000)  // r4.z <- rate

#line 18
    rsq r4.z, r4.z
    div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z  // r4.z <- rate

#line 19
    add r2.w, r2.w, r4.z

#line 21
    mul r4.xy, r4.xyxx, l(0.000500, 0.000500, 0.000000, 0.000000)
    add r4.xy, r4.xyxx, v1.xyxx
    sample_indexable(texture2d)(float,float,float,float) r4.xyw, r4.xyxx, t0.xywz, s0
    mov r4.xyw, r4.xyxw  // r4.x <- tex.x; r4.y <- tex.y; r4.w <- tex.z

#line 23
    mul r4.xyz, r4.zzzz, r4.xywx
    add r3.xyz, r3.xyzx, r4.xyzx

#line 24
    iadd r3.w, r3.w, l(1)
  endloop 
  mov r1.yzw, r3.xxyz  // r1.y <- color.x; r1.z <- color.y; r1.w <- color.z
  mov r2.x, r2.w  // r2.x <- sum

#line 25
  iadd r2.y, r2.y, l(1)
endloop 

#line 26
div r0.xyz, r1.yzwy, r2.xxxx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 27
itof r0.w, l(1)  // r0.w <- color.w

#line 28
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 45 instruction slots used
