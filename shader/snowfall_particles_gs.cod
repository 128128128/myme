//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PARTICLE_CONSTANTS
// {
//
//   float4 current_eye_position;       // Offset:    0 Size:    16 [unused]
//   float4 previous_eye_position;      // Offset:   16 Size:    16 [unused]
//   float4x4 camera_view;              // Offset:   32 Size:    64
//   float4x4 camera_projection;        // Offset:   96 Size:    64
//   float outermost_radius;            // Offset:  160 Size:     4 [unused]
//   float snowfall_area_height;        // Offset:  164 Size:     4 [unused]
//   float particle_size;               // Offset:  168 Size:     4
//   uint particle_count;               // Offset:  172 Size:     4 [unused]
//
// }
//
// Resource bind info for particle_buffer
// {
//
//   struct particle
//   {
//       
//       float3 position;               // Offset:    0
//       float3 velocity;               // Offset:   12
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// particle_buffer                   texture  struct         r/o             t9      1 
// PARTICLE_CONSTANTS                cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// VERTEXID                 0   x           0     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
gs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB9[11], immediateIndexed
dcl_resource_structured t9, 24
dcl_input v[1][0].x
dcl_temps 4
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_maxout 4
//
// Initial variable locations:
//   m0 <- output; 
//   v[0][0].x <- input; 
//   x0 <- billboard; x1 <- texcoords
//
#line 8 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\snowfall_particles_gs.hlsl"
mov x0[0].xyz, l(-1.000000,-1.000000,0,0)
mov x0[1].xyz, l(1.000000,-1.000000,0,0)
mov x0[2].xyz, l(-1.000000,1.000000,0,0)
mov x0[3].xyz, l(1.000000,1.000000,0,0)

#line 15
mov x1[0].xy, l(0,1.000000,0,0)
mov x1[1].xy, l(1.000000,1.000000,0,0)
mov x1[2].xy, l(0,0,0,0)
mov x1[3].xy, l(1.000000,0,0,0)

#line 23
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.x, v[0][0].x, l(0), t9.xxxx  // r0.x <- p.position.x
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.y, v[0][0].x, l(4), t9.xxxx  // r0.y <- p.position.y
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.z, v[0][0].x, l(8), t9.xxxx  // r0.z <- p.position.z

#line 25
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb9[2].xyzw  // r1.x <- view_space_pos.x
dp4 r1.y, r0.xyzw, cb9[3].xyzw  // r1.y <- view_space_pos.y
dp4 r1.z, r0.xyzw, cb9[4].xyzw  // r1.z <- view_space_pos.z

#line 33
mov r0.xyz, x0[0].xyzx
mul r0.xyz, r0.xyzx, cb9[10].zzzz  // r0.x <- corner_pos.x; r0.y <- corner_pos.y; r0.z <- corner_pos.z

#line 36
add r0.xyz, r0.xyzx, r1.xyzx
itof r0.w, l(1)
dp4 r2.x, r0.xyzw, cb9[6].xyzw  // r2.x <- element.position.x
dp4 r2.y, r0.xyzw, cb9[7].xyzw  // r2.y <- element.position.y
dp4 r2.z, r0.xyzw, cb9[8].xyzw  // r2.z <- element.position.z
dp4 r2.w, r0.xyzw, cb9[9].xyzw  // r2.w <- element.position.w

#line 39
mov r0.xyzw, l(1.000000,1.000000,1.000000,0.800000)  // r0.x <- element.color.x; r0.y <- element.color.y; r0.z <- element.color.z; r0.w <- element.color.w

#line 40
mov r3.xy, x1[0].xyxx  // r3.x <- element.texcoord.x; r3.y <- element.texcoord.y

#line 41
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xy, r3.xyxx
emit_stream m0

#line 33
mov r0.xyz, x0[1].xyzx
mul r0.xyz, r0.xyzx, cb9[10].zzzz  // r0.x <- corner_pos.x; r0.y <- corner_pos.y; r0.z <- corner_pos.z

#line 36
add r0.xyz, r0.xyzx, r1.xyzx
itof r0.w, l(1)
dp4 r2.x, r0.xyzw, cb9[6].xyzw
dp4 r2.y, r0.xyzw, cb9[7].xyzw
dp4 r2.z, r0.xyzw, cb9[8].xyzw
dp4 r2.w, r0.xyzw, cb9[9].xyzw

#line 39
mov r0.xyzw, l(1.000000,1.000000,1.000000,0.800000)  // r0.x <- element.color.x; r0.y <- element.color.y; r0.z <- element.color.z; r0.w <- element.color.w

#line 40
mov r3.xy, x1[1].xyxx

#line 41
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xy, r3.xyxx
emit_stream m0

#line 33
mov r0.xyz, x0[2].xyzx
mul r0.xyz, r0.xyzx, cb9[10].zzzz  // r0.x <- corner_pos.x; r0.y <- corner_pos.y; r0.z <- corner_pos.z

#line 36
add r0.xyz, r0.xyzx, r1.xyzx
itof r0.w, l(1)
dp4 r2.x, r0.xyzw, cb9[6].xyzw
dp4 r2.y, r0.xyzw, cb9[7].xyzw
dp4 r2.z, r0.xyzw, cb9[8].xyzw
dp4 r2.w, r0.xyzw, cb9[9].xyzw

#line 39
mov r0.xyzw, l(1.000000,1.000000,1.000000,0.800000)  // r0.x <- element.color.x; r0.y <- element.color.y; r0.z <- element.color.z; r0.w <- element.color.w

#line 40
mov r3.xy, x1[2].xyxx

#line 41
mov o0.xyzw, r2.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xy, r3.xyxx
emit_stream m0

#line 33
mov r0.xyz, x0[3].xyzx
mul r0.xyz, r0.xyzx, cb9[10].zzzz  // r0.x <- corner_pos.x; r0.y <- corner_pos.y; r0.z <- corner_pos.z

#line 36
add r0.xyz, r0.xyzx, r1.xyzx
itof r0.w, l(1)
dp4 r1.x, r0.xyzw, cb9[6].xyzw  // r1.x <- element.position.x
dp4 r1.y, r0.xyzw, cb9[7].xyzw  // r1.y <- element.position.y
dp4 r1.z, r0.xyzw, cb9[8].xyzw  // r1.z <- element.position.z
dp4 r1.w, r0.xyzw, cb9[9].xyzw  // r1.w <- element.position.w

#line 39
mov r0.xyzw, l(1.000000,1.000000,1.000000,0.800000)  // r0.x <- element.color.x; r0.y <- element.color.y; r0.z <- element.color.z; r0.w <- element.color.w

#line 40
mov r2.xy, x1[3].xyxx  // r2.x <- element.texcoord.x; r2.y <- element.texcoord.y

#line 41
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xy, r2.xyxx
emit_stream m0

#line 43
cut_stream m0

#line 44
ret 
// Approximately 73 instruction slots used
