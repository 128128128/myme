//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   struct SOMETHING
//   {
//       
//       float iTime;                   // Offset:    0
//       float triple_speed_iTime;      // Offset:    4
//       float elapsedTime;             // Offset:    8
//       float shadow_map_num;          // Offset:   12
//       float4x4 mlvp[3];              // Offset:   16
//
//   } something;                       // Offset:    0 Size:   208
//   
//   struct PLAYER
//   {
//       
//       float4 position;               // Offset:  208
//       float4 direction;              // Offset:  224
//
//   } player;                          // Offset:  208 Size:    32 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// anisotropic_sampler_state         sampler      NA          NA             s2      1 
// noise_map_1                       texture  float4          2d             t5      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float       
// NORMAL                   0   xyzw        2     NONE   float       
// TANGENT                  0   xyzw        3     NONE   float       
// BINORMAL                 0   xyzw        4     NONE   float       
// TEXCOORD                 0   xy          5     NONE   float   xy  
// COLOR                    0   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 4
mov r0.y, l(0)
mul r0.xz, cb3[0].xxxx, l(0.800000, 0.000000, -0.050000, 0.000000)
mad r0.yz, v5.xxyx, l(0.000000, 0.030000, 0.030000, 0.000000), r0.yyzy
mov r1.xy, r0.yzyy
mov r1.zw, l(0,0,0.500000,1.000000)
mov r0.w, l(0)
mov r2.x, l(0)
loop 
  ige r2.y, r2.x, l(5)
  breakc_nz r2.y
  mul r1.xy, r1.wwww, r1.xyxx
  sample_indexable(texture2d)(float,float,float,float) r2.y, r1.xyxx, t5.yxzw, s2
  mad r0.w, r1.z, r2.y, r0.w
  iadd r2.x, r2.x, l(1)
  mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.500000, 2.000000)
endloop 
add r0.w, r0.w, l(-0.200000)
mul_sat r0.w, r0.w, l(1.250000)
mad r1.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r1.y, r0.w, r1.x
mov r1.x, l(0.600000)
mul r1.xy, r1.xyxx, l(0.000000, 0.600000, 0.000000, 0.000000)
frc r0.x, r0.x
mad r0.w, r0.x, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mad r1.zw, r1.xxxy, r0.xxxx, r0.yyyz
mad r0.x, cb3[0].x, l(0.800000), l(0.500000)
frc r0.x, r0.x
mad r2.x, r0.x, l(2.000000), l(-1.000000)
add r2.x, -|r2.x|, l(1.000000)
mad r0.xy, r1.xyxx, r0.xxxx, r0.yzyy
mov r1.xy, r1.zwzz
mov r0.z, l(0)
mov r2.yzw, l(0,0.500000,1.000000,0)
loop 
  ige r3.x, r2.w, l(5)
  breakc_nz r3.x
  mul r1.xy, r1.xyxx, r2.zzzz
  sample_indexable(texture2d)(float,float,float,float) r3.x, r1.xyxx, t5.xyzw, s2
  mad r0.z, r2.y, r3.x, r0.z
  iadd r2.w, r2.w, l(1)
  mul r2.yz, r2.yyzy, l(0.000000, 0.500000, 2.000000, 0.000000)
endloop 
mov r1.xy, r0.xyxx
mov r2.yzw, l(0,0.500000,1.000000,0)
mov r3.x, l(0)
loop 
  ige r3.y, r3.x, l(5)
  breakc_nz r3.y
  mul r1.xy, r1.xyxx, r2.zzzz
  sample_indexable(texture2d)(float,float,float,float) r3.y, r1.xyxx, t5.yxzw, s2
  mad r2.w, r2.y, r3.y, r2.w
  iadd r3.x, r3.x, l(1)
  mul r2.yz, r2.yyzy, l(0.000000, 0.500000, 2.000000, 0.000000)
endloop 
mul r1.x, r2.x, r2.w
mov r2.yz, r1.zzwz
mov r3.xy, l(0.500000,1.000000,0,0)
mov r1.y, l(0)
mov r2.w, l(0)
loop 
  ige r3.z, r2.w, l(5)
  breakc_nz r3.z
  mul r2.yz, r2.yyzy, r3.yyyy
  sample_indexable(texture2d)(float,float,float,float) r3.z, r2.yzyy, t5.yzxw, s2
  mad r1.y, r3.x, r3.z, r1.y
  iadd r2.w, r2.w, l(1)
  mul r3.xy, r3.xyxx, l(0.500000, 2.000000, 0.000000, 0.000000)
endloop 
mov r1.zw, r0.xxxy
mov r2.yzw, l(0,0.500000,1.000000,0)
mov r3.x, l(0)
loop 
  ige r3.y, r3.x, l(5)
  breakc_nz r3.y
  mul r1.zw, r1.zzzw, r2.zzzz
  sample_indexable(texture2d)(float,float,float,float) r3.y, r1.zwzz, t5.yxzw, s2
  mad r2.w, r2.y, r3.y, r2.w
  iadd r3.x, r3.x, l(1)
  mul r2.yz, r2.yyzy, l(0.000000, 0.500000, 2.000000, 0.000000)
endloop 
mad r0.x, r0.z, r0.w, r1.x
mad r0.x, r1.y, r0.w, r0.x
mad r0.x, r2.w, r2.x, r0.x
add r0.y, -r0.x, l(1.000000)
mov_sat r0.x, r0.x
mad r0.z, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.z
mad o0.xyzw, r0.yyyy, l(0.600000, 0.600000, 0.900000, 0.200000), r0.xxxx
ret 
// Approximately 92 instruction slots used
