//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   row_major float4x4 bone_transforms[128];// Offset:   64 Size:  8192
//
// }
//
// cbuffer CAMERA_CONSTANT_BUFFER
// {
//
//   struct CAMERA_CONSTANTS
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//
//   } camera_constants;                // Offset:    0 Size:   352
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// CAMERA_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// WEIGHTS                  0   xyzw        4     NONE   float   xyzw
// BONES                    0   xyzw        5     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer CB0[516], dynamicIndexed
dcl_constantbuffer CB1[14], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   v3.x <- vin.texcoord.x; v3.y <- vin.texcoord.y; 
//   v4.x <- vin.bone_weights.x; v4.y <- vin.bone_weights.y; v4.z <- vin.bone_weights.z; v4.w <- vin.bone_weights.w; 
//   v5.x <- vin.bone_indices.x; v5.y <- vin.bone_indices.y; v5.z <- vin.bone_indices.z; v5.w <- vin.bone_indices.w; 
//   o4.x <- <main return value>.texcoord.x; o4.y <- <main return value>.texcoord.y; 
//   o3.x <- <main return value>.tangent.x; o3.y <- <main return value>.tangent.y; o3.z <- <main return value>.tangent.z; o3.w <- <main return value>.tangent.w; 
//   o2.x <- <main return value>.normal.x; o2.y <- <main return value>.normal.y; o2.z <- <main return value>.normal.z; o2.w <- <main return value>.normal.w; 
//   o1.x <- <main return value>.position.x; o1.y <- <main return value>.position.y; o1.z <- <main return value>.position.z; o1.w <- <main return value>.position.w; 
//   o0.x <- <main return value>.sv_position.x; o0.y <- <main return value>.sv_position.y; o0.z <- <main return value>.sv_position.z; o0.w <- <main return value>.sv_position.w
//
#line 7 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\dynamic_mesh_vs.hlsl"
itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- blended_position.x; r0.y <- blended_position.y; r0.z <- blended_position.z

#line 8
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- blended_normal.x; r1.y <- blended_normal.y; r1.z <- blended_normal.z

#line 9
mov r0.w, l(0)  // r0.w <- i
mov r2.xyz, r0.xyzx  // r2.x <- blended_position.x; r2.y <- blended_position.y; r2.z <- blended_position.z
mov r3.xyz, r1.xyzx  // r3.x <- blended_normal.x; r3.y <- blended_normal.y; r3.z <- blended_normal.z
mov r1.w, r0.w  // r1.w <- i
loop 
  ilt r2.w, r1.w, l(4)
  breakc_z r2.w

#line 11
  dp4 r2.w, v4.xyzw, icb[r1.w + 0].xyzw
  and r4.xyzw, v5.xyzw, icb[r1.w + 4].xyzw
  or r4.xy, r4.ywyy, r4.xzxx
  or r3.w, r4.y, r4.x
  imul null, r3.w, r3.w, l(4)
  mul r4.xyz, v0.xxxx, cb0[r3.w + 4].xyzx
  mul r5.xyz, v0.yyyy, cb0[r3.w + 5].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r5.xyz, v0.zzzz, cb0[r3.w + 6].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r5.xyz, v0.wwww, cb0[r3.w + 7].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r4.xyz, r2.wwww, r4.xyzx
  add r2.xyz, r2.xyzx, r4.xyzx

#line 12
  dp4 r2.w, v4.xyzw, icb[r1.w + 0].xyzw
  and r4.xyzw, v5.xyzw, icb[r1.w + 4].xyzw
  or r4.xy, r4.ywyy, r4.xzxx
  or r3.w, r4.y, r4.x
  imul null, r3.w, r3.w, l(4)
  mul r4.xyz, v1.xxxx, cb0[r3.w + 4].xyzx
  mul r5.xyz, v1.yyyy, cb0[r3.w + 5].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r5.xyz, v1.zzzz, cb0[r3.w + 6].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r4.xyz, r2.wwww, r4.xyzx
  add r3.xyz, r3.xyzx, r4.xyzx

#line 13
  iadd r1.w, r1.w, l(1)
endloop 

#line 14
mov r2.xyz, r2.xyzx  // r2.x <- vin.position.x; r2.y <- vin.position.y; r2.z <- vin.position.z
mov r0.x, l(1.000000)  // r0.x <- vin.position.w

#line 15
mov r3.xyz, r3.xyzx  // r3.x <- vin.normal.x; r3.y <- vin.normal.y; r3.z <- vin.normal.z

#line 18
mul r1.xyzw, cb0[0].xxxx, cb1[10].xyzw
mul r4.xyzw, cb0[0].yyyy, cb1[11].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[0].zzzz, cb1[12].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[0].wwww, cb1[13].xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, cb0[1].xxxx, cb1[10].xyzw
mul r5.xyzw, cb0[1].yyyy, cb1[11].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[1].zzzz, cb1[12].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[1].wwww, cb1[13].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[2].xxxx, cb1[10].xyzw
mul r6.xyzw, cb0[2].yyyy, cb1[11].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[2].zzzz, cb1[12].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[2].wwww, cb1[13].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[3].xxxx, cb1[10].xyzw
mul r7.xyzw, cb0[3].yyyy, cb1[11].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb0[3].zzzz, cb1[12].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb0[3].wwww, cb1[13].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r1.xyzw, r1.xyzw, r2.xxxx
mul r4.xyzw, r2.yyyy, r4.xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, r2.zzzz, r5.xyzw
add r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyzw, r0.xxxx, r6.xyzw
add r1.xyzw, r1.xyzw, r4.xyzw  // r1.x <- vout.sv_position.x; r1.y <- vout.sv_position.y; r1.z <- vout.sv_position.z; r1.w <- vout.sv_position.w

#line 21
mul r4.xyzw, r2.xxxx, cb0[0].xyzw
mul r5.xyzw, r2.yyyy, cb0[1].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r2.xyzw, r2.zzzz, cb0[2].xyzw
add r2.xyzw, r2.xyzw, r4.xyzw
mul r0.xyzw, r0.xxxx, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r2.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 22
itof r2.x, l(0)  // r2.x <- vin.normal.w

#line 23
mul r4.xyzw, r3.xxxx, cb0[0].xyzw
mul r5.xyzw, r3.yyyy, cb0[1].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r3.xyzw, r3.zzzz, cb0[2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r2.xyzw, r2.xxxx, cb0[3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
dp4 r3.x, r2.xyzw, r2.xyzw
rsq r3.x, r3.x
mul r2.xyzw, r2.xyzw, r3.xxxx  // r2.x <- vout.normal.x; r2.y <- vout.normal.y; r2.z <- vout.normal.z; r2.w <- vout.normal.w

#line 25
mul r3.xyz, v2.xxxx, cb0[0].xyzx
mul r4.xyz, v2.yyyy, cb0[1].xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r4.xyz, v2.zzzz, cb0[2].xyzx
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx  // r3.x <- vout.tangent.x; r3.y <- vout.tangent.y; r3.z <- vout.tangent.z

#line 26
mov r3.w, v2.w  // r3.w <- vout.tangent.w

#line 28
mov r4.xy, v3.xyxx  // r4.x <- vout.texcoord.x; r4.y <- vout.texcoord.y

#line 30
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xyzw, r2.xyzw
mov o3.xyz, r3.xyzx
mov o3.w, r3.w
mov o4.xy, r4.xyxx
ret 
// Approximately 110 instruction slots used
