//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer FOR_PLAY
// {
//
//   float4 mouse;                      // Offset:    0 Size:    16
//   float coverage;                    // Offset:   16 Size:     4
//   float boolrain;                    // Offset:   20 Size:     4
//   float cloud_speed;                 // Offset:   24 Size:     4
//   float sky_state;                   // Offset:   28 Size:     4
//   float4 top_sky_color;              // Offset:   32 Size:    16
//   float4 under_sky_color;            // Offset:   48 Size:    16
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   struct SOMETHING
//   {
//       
//       float iTime;                   // Offset:    0
//       float triple_speed_iTime;      // Offset:    4
//       float elapsedTime;             // Offset:    8
//       float shadow_map_num;          // Offset:   12
//       float4x4 mlvp[3];              // Offset:   16
//
//   } something;                       // Offset:    0 Size:   208
//   
//   struct PLAYER
//   {
//       
//       float4 position;               // Offset:  208
//       float4 direction;              // Offset:  224
//
//   } player;                          // Offset:  208 Size:    32 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb3      1 
// FOR_PLAY                          cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
// SV_TARGET                3   xyzw        3   TARGET   float   xyzw
// SV_TARGET                4   xyzw        4   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB4[4], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 11
mad r0.xy, v0.xyxx, l(1.000000, -0.001389, 0.000000, 0.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
mad r0.xy, r0.xyxx, l(0.001563, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r0.yzw, r0.yyyy, l(0.000000, 0.000000, 1.000000, 0.600000), l(0.000000, 0.000000, 0.600000, -1.000000)
mad r0.xyz, r0.xxxx, l(-1.777778, 0.000000, 0.000000, 0.000000), r0.yzwy
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r1.x, l(0.000000), cb4[0].w
mul r1.yz, cb4[0].yyxy, l(0.000000, 0.002269, -0.006807, 0.000000)
sincos r2.x, r3.x, r1.y
mov r4.x, -r2.x
mov r4.y, r3.x
dp2 r3.y, r4.yxyy, r0.yzyy
mov r4.z, r2.x
dp2 r0.w, r4.zyzz, r0.yzyy
sincos r2.x, r4.x, r1.z
mov r5.x, -r2.x
mov r5.y, r4.x
dp2 r3.x, r5.yxyy, r0.xwxx
mov r5.z, r2.x
dp2 r3.z, r5.zyzz, r0.xwxx
movc r0.xyz, r1.xxxx, r3.xyzx, r0.xyzx
ge r1.xy, l(0.000000, 1.000000, 0.000000, 0.000000), cb4[1].wwww
if_nz r1.x
  mul r0.w, cb3[0].x, l(0.050000)
  sincos r0.w, null, r0.w
  mov r2.x, |r0.w|
  mov r2.y, l(-1.000000)
  dp2 r0.w, r2.xyxx, r2.xyxx
  rsq r0.w, r0.w
  mul r1.zw, r0.wwww, r2.xxxy
  dp2 r0.w, r0.yzyy, r1.zwzz
  max r0.w, r0.w, l(0.000000)
  add r1.z, -r0.y, l(1.000000)
  add r2.xyz, -cb4[2].xyzx, cb4[3].xyzx
  mad r2.xyz, r1.zzzz, r2.xyzx, cb4[2].xyzx
  log r0.w, r0.w
  mul r1.zw, r0.wwww, l(0.000000, 0.000000, 1500.000000, 10.000000)
  exp r1.zw, r1.zzzw
  mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 5.000000, 0.600000)
  min r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  mad r2.xyz, r1.zzzz, l(1.000000, 0.700000, 0.550000, 0.000000), r2.xyzx
  mad r2.xyz, r1.wwww, l(1.000000, 0.700000, 0.550000, 0.000000), r2.xyzx
else 
  ge r0.w, l(1.000000), cb4[1].w
  if_nz r0.w
    mul r0.w, cb3[0].x, l(0.050000)
    sincos r0.w, null, r0.w
    mov r3.x, |r0.w|
    mov r3.y, l(-1.000000)
    dp2 r0.w, r3.xyxx, r3.xyxx
    rsq r0.w, r0.w
    mul r1.zw, r0.wwww, r3.xxxy
    dp2 r0.w, r0.yzyy, r1.zwzz
    max r0.w, r0.w, l(0.000000)
    mul r3.xyzw, v2.xyxy, l(0.033333, 0.033333, 0.000781, 0.001389)
    round_ni r1.zw, r3.yyyx
    dp2 r2.w, r1.wzww, l(12.989800, 78.233002, 0.000000, 0.000000)
    sincos r2.w, null, r2.w
    mul r2.w, r2.w, l(43758.546875)
    frc r2.w, r2.w
    lt r3.x, l(0.950000), r2.w
    mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 30.000000, 30.000000), l(0.000000, 0.000000, 15.000000, 15.000000)
    add r2.w, r2.w, l(-0.950000)
    mad r2.w, r2.w, l(899.999817), cb3[0].x
    sincos r2.w, null, r2.w
    mad r2.w, r2.w, l(0.200000), l(0.900000)
    add r1.zw, -r1.zzzw, v2.yyyx
    dp2 r3.y, r1.zwzz, r1.zwzz
    sqrt r3.y, r3.y
    mad r3.y, -r3.y, l(0.066667), l(1.000000)
    mul r3.y, r2.w, r3.y
    div r1.z, r3.y, |r1.z|
    mul r1.z, r2.w, r1.z
    div r1.z, r1.z, |r1.w|
    dp2 r1.w, r3.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
    sincos r1.w, null, r1.w
    mul r1.w, r1.w, l(43758.546875)
    frc r1.w, r1.w
    lt r1.w, l(0.996000), r1.w
    dp2 r2.w, v2.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
    sincos r2.w, null, r2.w
    mul r2.w, r2.w, l(43758.546875)
    frc r2.w, r2.w
    mul r3.y, r2.w, cb3[0].x
    mul r3.z, r2.w, l(720.000000)
    mad r3.y, r3.y, l(5.000000), r3.z
    sincos r3.y, null, r3.y
    add r3.y, r3.y, l(0.750000)
    mul r2.w, r2.w, r3.y
    and r1.w, r1.w, r2.w
    movc r1.z, r3.x, r1.z, r1.w
    add r3.xyz, r1.zzzz, l(0.100000, 0.100000, 0.400000, 0.000000)
    log r0.w, r0.w
    mul r0.w, r0.w, l(500.000000)
    exp r0.w, r0.w
    mul r0.w, r0.w, l(5.000000)
    min r0.w, r0.w, l(0.700000)
    mad r2.xyz, r0.wwww, l(0.900000, 0.900000, 0.900000, 0.000000), r3.xyzx
  else 
    max r0.w, -r0.z, l(0.000000)
    add r1.z, -r0.y, l(1.000000)
    mad r3.xyz, r1.zzzz, l(0.910000, 0.410000, -0.400000, 0.000000), l(0.090000, 0.090000, 0.400000, 0.000000)
    log r0.w, r0.w
    mul r1.zw, r0.wwww, l(0.000000, 0.000000, 1500.000000, 10.000000)
    exp r1.zw, r1.zzzw
    mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 5.000000, 0.600000)
    min r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    mad r3.xyz, r1.zzzz, l(1.000000, 0.700000, 0.550000, 0.000000), r3.xyzx
    mad r2.xyz, r1.wwww, l(1.000000, 0.700000, 0.550000, 0.000000), r3.xyzx
  endif 
endif 
mul r0.w, r0.y, l(-451.000000)
mad r0.w, -r0.w, r0.w, l(203401.000000)
add r0.w, -r0.w, l(250000.000000)
sqrt r0.w, r0.w
mad r1.z, r0.y, l(-451.000000), -r0.w
mad r0.w, r0.y, l(-451.000000), r0.w
lt r1.w, r1.z, l(0.000000)
movc r0.w, r1.w, r0.w, r1.z
ge r1.z, l(100000008.000000), r0.w
mad r3.xyz, r0.xyzx, r0.wwww, l(0.000000, 1.000000, 0.000000, 0.000000)
and r3.xyz, r1.zzzz, r3.xyzx
div r0.xyz, r0.xyzx, r0.yyyy
ge r0.w, cb4[1].w, l(2.000000)
movc r0.w, r0.w, l(0.600000), l(1.000000)
mul r4.z, cb4[1].z, -cb3[0].x
add r1.z, -cb4[1].x, l(1.000000)
mov r4.xy, l(0,0,0,0)
mov r5.xyz, r3.xyzx
mov r6.xyz, l(0,0,0,0)
mov r1.w, r0.w
mov r2.w, l(0)
mov r3.w, l(0)
loop 
  ige r4.w, r3.w, l(25)
  breakc_nz r4.w
  mad r7.xyz, r5.xyzx, l(0.021224, 0.021224, 0.021224, 0.000000), r4.xyzx
  round_ni r8.xyz, r7.xyzx
  frc r9.xyz, r7.xyzx
  mul r10.xyz, r9.xyzx, r9.xyzx
  mad r9.xyz, -r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
  mul r9.xyz, r9.xyzx, r10.xyzx
  mad r4.w, r8.y, l(157.000000), r8.x
  mad r4.w, r8.z, l(113.000000), r4.w
  sincos r5.w, null, r4.w
  mul r5.w, r5.w, l(753.545288)
  frc r5.w, r5.w
  add r8.xyzw, r4.wwww, l(1.000000, 157.000000, 158.000000, 113.000000)
  sincos r8.xyzw, null, r8.xyzw
  mul r8.xyzw, r8.xyzw, l(753.545288, 753.545288, 753.545288, 753.545288)
  frc r8.xyzw, r8.xyzw
  add r6.w, -r5.w, r8.x
  mad r5.w, r9.x, r6.w, r5.w
  add r6.w, -r8.y, r8.z
  mad r6.w, r9.x, r6.w, r8.y
  add r6.w, -r5.w, r6.w
  mad r5.w, r9.y, r6.w, r5.w
  add r8.xyz, r4.wwww, l(114.000000, 270.000000, 271.000000, 0.000000)
  sincos r8.xyz, null, r8.xyzx
  mul r8.xyz, r8.xyzx, l(753.545288, 753.545288, 753.545288, 0.000000)
  frc r8.xyz, r8.xyzx
  add r4.w, -r8.w, r8.x
  mad r4.w, r9.x, r4.w, r8.w
  add r6.w, -r8.y, r8.z
  mad r6.w, r9.x, r6.w, r8.y
  add r6.w, -r4.w, r6.w
  mad r4.w, r9.y, r6.w, r4.w
  add r4.w, -r5.w, r4.w
  mad r4.w, r9.z, r4.w, r5.w
  mul r8.xyz, r7.xyzx, l(2.764340, 2.764340, 2.764340, 0.000000)
  round_ni r9.xyz, r8.xyzx
  frc r8.xyz, r8.xyzx
  mul r10.xyz, r8.xyzx, r8.xyzx
  mad r8.xyz, -r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
  mul r8.xyz, r8.xyzx, r10.xyzx
  mad r5.w, r9.y, l(157.000000), r9.x
  mad r5.w, r9.z, l(113.000000), r5.w
  sincos r6.w, null, r5.w
  mul r6.w, r6.w, l(753.545288)
  frc r6.w, r6.w
  add r9.xyzw, r5.wwww, l(1.000000, 157.000000, 158.000000, 113.000000)
  sincos r9.xyzw, null, r9.xyzw
  mul r9.xyzw, r9.xyzw, l(753.545288, 753.545288, 753.545288, 753.545288)
  frc r9.xyzw, r9.xyzw
  add r7.w, -r6.w, r9.x
  mad r6.w, r8.x, r7.w, r6.w
  add r7.w, -r9.y, r9.z
  mad r7.w, r8.x, r7.w, r9.y
  add r7.w, -r6.w, r7.w
  mad r6.w, r8.y, r7.w, r6.w
  add r9.xyz, r5.wwww, l(114.000000, 270.000000, 271.000000, 0.000000)
  sincos r9.xyz, null, r9.xyzx
  mul r9.xyz, r9.xyzx, l(753.545288, 753.545288, 753.545288, 0.000000)
  frc r9.xyz, r9.xyzx
  add r5.w, -r9.w, r9.x
  mad r5.w, r8.x, r5.w, r9.w
  add r7.w, -r9.y, r9.z
  mad r7.w, r8.x, r7.w, r9.y
  add r7.w, -r5.w, r7.w
  mad r5.w, r8.y, r7.w, r5.w
  add r5.w, -r6.w, r5.w
  mad r5.w, r8.z, r5.w, r6.w
  mul r5.w, r5.w, l(0.255849)
  mad r4.w, r4.w, l(0.517497), r5.w
  mul r8.xyz, r7.xyzx, l(7.641575, 7.641575, 7.641575, 0.000000)
  round_ni r9.xyz, r8.xyzx
  frc r8.xyz, r8.xyzx
  mul r10.xyz, r8.xyzx, r8.xyzx
  mad r8.xyz, -r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
  mul r8.xyz, r8.xyzx, r10.xyzx
  mad r5.w, r9.y, l(157.000000), r9.x
  mad r5.w, r9.z, l(113.000000), r5.w
  sincos r6.w, null, r5.w
  mul r6.w, r6.w, l(753.545288)
  frc r6.w, r6.w
  add r9.xyzw, r5.wwww, l(1.000000, 157.000000, 158.000000, 113.000000)
  sincos r9.xyzw, null, r9.xyzw
  mul r9.xyzw, r9.xyzw, l(753.545288, 753.545288, 753.545288, 753.545288)
  frc r9.xyzw, r9.xyzw
  add r7.w, -r6.w, r9.x
  mad r6.w, r8.x, r7.w, r6.w
  add r7.w, -r9.y, r9.z
  mad r7.w, r8.x, r7.w, r9.y
  add r7.w, -r6.w, r7.w
  mad r6.w, r8.y, r7.w, r6.w
  add r9.xyz, r5.wwww, l(114.000000, 270.000000, 271.000000, 0.000000)
  sincos r9.xyz, null, r9.xyzx
  mul r9.xyz, r9.xyzx, l(753.545288, 753.545288, 753.545288, 0.000000)
  frc r9.xyz, r9.xyzx
  add r5.w, -r9.w, r9.x
  mad r5.w, r8.x, r5.w, r9.w
  add r7.w, -r9.y, r9.z
  mad r7.w, r8.x, r7.w, r9.y
  add r7.w, -r5.w, r7.w
  mad r5.w, r8.y, r7.w, r5.w
  add r5.w, -r6.w, r5.w
  mad r5.w, r8.z, r5.w, r6.w
  mad r4.w, r5.w, l(0.125276), r4.w
  mul r7.xyz, r7.xyzx, l(21.123911, 21.123911, 21.123911, 0.000000)
  round_ni r8.xyz, r7.xyzx
  frc r7.xyz, r7.xyzx
  mul r9.xyz, r7.xyzx, r7.xyzx
  mad r7.xyz, -r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
  mul r7.xyz, r7.xyzx, r9.xyzx
  mad r5.w, r8.y, l(157.000000), r8.x
  mad r5.w, r8.z, l(113.000000), r5.w
  sincos r6.w, null, r5.w
  mul r6.w, r6.w, l(753.545288)
  frc r6.w, r6.w
  add r8.xyzw, r5.wwww, l(1.000000, 157.000000, 158.000000, 113.000000)
  sincos r8.xyzw, null, r8.xyzw
  mul r8.xyzw, r8.xyzw, l(753.545288, 753.545288, 753.545288, 753.545288)
  frc r8.xyzw, r8.xyzw
  add r7.w, -r6.w, r8.x
  mad r6.w, r7.x, r7.w, r6.w
  add r7.w, -r8.y, r8.z
  mad r7.w, r7.x, r7.w, r8.y
  add r7.w, -r6.w, r7.w
  mad r6.w, r7.y, r7.w, r6.w
  add r8.xyz, r5.wwww, l(114.000000, 270.000000, 271.000000, 0.000000)
  sincos r8.xyz, null, r8.xyzx
  mul r8.xyz, r8.xyzx, l(753.545288, 753.545288, 753.545288, 0.000000)
  frc r8.xyz, r8.xyzx
  add r5.w, -r8.w, r8.x
  mad r5.w, r7.x, r5.w, r8.w
  add r7.w, -r8.y, r8.z
  mad r7.x, r7.x, r7.w, r8.y
  add r7.x, -r5.w, r7.x
  mad r5.w, r7.y, r7.x, r5.w
  add r5.w, -r6.w, r5.w
  mad r5.w, r7.z, r5.w, r6.w
  mad r4.w, r5.w, l(0.062559), r4.w
  add r5.w, -r1.z, r4.w
  mul_sat r5.w, r5.w, l(20.000000)
  mad r6.w, r5.w, l(-2.000000), l(3.000000)
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r6.w
  mul_sat r4.w, r4.w, r5.w
  mul r5.w, r4.w, l(-0.892213)
  exp r5.w, r5.w
  mul r1.w, r1.w, r5.w
  lt r6.w, r1.w, l(0.010000)
  if_nz r6.w
    break 
  endif 
  itof r6.w, r3.w
  mul r6.w, r6.w, l(0.057708)
  exp r6.w, r6.w
  mul r6.w, r1.w, r6.w
  mul r4.w, r4.w, r6.w
  mad r7.xyz, r4.wwww, l(0.342857, 0.342857, 0.342857, 0.000000), r6.xyzx
  add r4.w, -r5.w, l(1.000000)
  add r5.w, -r2.w, l(1.000000)
  mad r4.w, r4.w, r5.w, r2.w
  mad r5.xyz, r0.xyzx, l(0.600000, 0.600000, 0.600000, 0.000000), r5.xyzx
  dp3 r5.w, r5.xyzx, r5.xyzx
  sqrt r5.w, r5.w
  lt r5.w, l(1000.000000), r5.w
  if_nz r5.w
    mov r6.xyz, r7.xyzx
    mov r2.w, r4.w
    break 
  endif 
  mov r6.xyz, r7.xyzx
  mov r2.w, r4.w
  iadd r3.w, r3.w, l(1)
endloop 
add r0.x, r2.w, l(0.000001)
div r0.xyz, r6.xyzx, r0.xxxx
add r0.xyz, -r2.xyzx, r0.xyzx
mad r3.xyz, r2.wwww, r0.xyzx, r2.xyzx
mad r0.xyz, r0.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r2.xyzx
movc r0.xyz, r1.yyyy, r0.xyzx, r3.xyzx
movc r0.xyz, r1.xxxx, r3.xyzx, r0.xyzx
lt r0.w, l(0.000000), cb4[1].y
if_nz r0.w
  mad r0.w, cb3[0].x, l(0.200000), l(0.100000)
  mul r1.x, v0.x, l(0.000156)
  mad r1.xz, r0.wwww, l(0.500000, 0.000000, 0.500000, 0.000000), r1.xxxx
  mad r2.xyzw, v0.xyxy, l(1.000000, -0.001389, 1.000000, -0.001389), l(0.000000, 1.000000, 0.000000, 1.000000)
  mad r1.yw, cb3[0].xxxx, l(0.000000, 0.040000, 0.000000, 0.040000), l(0.000000, 0.020000, 0.000000, 0.020000)
  mad r1.xyzw, r2.xyzw, l(0.000781, 0.010000, 0.000781, 0.010000), r1.xyzw
  mul r1.xyzw, r1.xyzw, l(200.500000, 200.500000, 125.500000, 125.500000)
  round_ni r2.xyzw, r1.xyzw
  frc r1.xyzw, r1.xyzw
  mul r3.xyzw, r1.xyzw, r1.xyzw
  mad r1.xyzw, -r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
  mul r1.xyzw, r1.xyzw, r3.xyzw
  dp2 r0.w, r2.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
  sincos r0.w, null, r0.w
  mul r0.w, r0.w, l(43758.546875)
  frc r0.w, r0.w
  add r3.xyzw, r2.xyxy, l(1.000000, 0.000000, 0.000000, 1.000000)
  dp2 r3.x, r3.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
  sincos r3.x, null, r3.x
  mul r3.x, r3.x, l(43758.546875)
  dp2 r3.y, r3.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
  sincos r3.y, null, r3.y
  mul r3.y, r3.y, l(43758.546875)
  frc r3.xy, r3.xyxx
  add r4.xyzw, r2.xyzw, l(1.000000, 1.000000, 1.000000, 0.000000)
  dp2 r2.x, r4.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
  sincos r2.x, null, r2.x
  mul r2.x, r2.x, l(43758.546875)
  frc r2.x, r2.x
  add r2.y, -r0.w, r3.x
  mad r0.w, r1.x, r2.y, r0.w
  add r2.x, -r3.y, r2.x
  mad r1.x, r1.x, r2.x, r3.y
  add r1.x, -r0.w, r1.x
  mad r0.w, r1.y, r1.x, r0.w
  dp2 r1.x, r2.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
  sincos r1.x, null, r1.x
  mul r1.x, r1.x, l(43758.546875)
  dp2 r1.y, r4.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
  sincos r1.y, null, r1.y
  mul r1.y, r1.y, l(43758.546875)
  frc r1.xy, r1.xyxx
  add r2.xyzw, r2.zwzw, l(0.000000, 1.000000, 1.000000, 1.000000)
  dp2 r2.x, r2.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
  sincos r2.x, null, r2.x
  mul r2.x, r2.x, l(43758.546875)
  dp2 r2.y, r2.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
  sincos r2.y, null, r2.y
  mul r2.y, r2.y, l(43758.546875)
  frc r2.xy, r2.xyxx
  add r1.y, -r1.x, r1.y
  mad r1.x, r1.z, r1.y, r1.x
  add r1.y, -r2.x, r2.y
  mad r1.y, r1.z, r1.y, r2.x
  add r1.y, -r1.x, r1.y
  mad r1.x, r1.w, r1.y, r1.x
  mul r0.w, r0.w, r1.x
  log r0.w, |r0.w|
  mul r0.w, r0.w, l(15.000000)
  exp r0.w, r0.w
  mul r0.w, r0.w, l(1.875000)
  min r0.w, r0.w, l(0.250000)
  add r0.xyz, r0.wwww, r0.xyzx
endif 
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
mov o1.xyzw, l(0,0,0,0)
mov o2.xyzw, l(0,0,0,0)
mov o3.xyzw, l(0,0,0,0)
mov o4.xyzw, l(0,0,1.000000,1.000000)
ret 
// Approximately 388 instruction slots used
