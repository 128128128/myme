//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANTS
// {
//
//   float4x4 world;                    // Offset:    0 Size:    64
//   float4 color;                      // Offset:   64 Size:    16 [unused]
//   float shadow_reciever;             // Offset:   80 Size:     4 [unused]
//   float3 pad;                        // Offset:   84 Size:    12 [unused]
//
// }
//
// cbuffer CAMERA_CONSTANT_BUFFER
// {
//
//   struct CAMERA_CONSTANTS
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//
//   } camera_constants;                // Offset:    0 Size:   352
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANTS                  cbuffer      NA          NA            cb0      1 
// CAMERA_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// BINORMAL                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// COLOR                    0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// BINORMAL                 0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 0   xy          5     NONE   float   xy  
// COLOR                    0   xyzw        6     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[14], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xy
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xy
dcl_output o6.xyzw
dcl_temps 2
mul r0.xyzw, cb0[1].xyzw, cb1[11].xxxx
mad r0.xyzw, cb0[0].xyzw, cb1[10].xxxx, r0.xyzw
mad r0.xyzw, cb0[2].xyzw, cb1[12].xxxx, r0.xyzw
mad r0.xyzw, cb0[3].xyzw, cb1[13].xxxx, r0.xyzw
dp4 o0.x, v0.xyzw, r0.xyzw
mul r0.xyzw, cb0[1].xyzw, cb1[11].yyyy
mad r0.xyzw, cb0[0].xyzw, cb1[10].yyyy, r0.xyzw
mad r0.xyzw, cb0[2].xyzw, cb1[12].yyyy, r0.xyzw
mad r0.xyzw, cb0[3].xyzw, cb1[13].yyyy, r0.xyzw
dp4 o0.y, v0.xyzw, r0.xyzw
mul r0.xyzw, cb0[1].xyzw, cb1[11].zzzz
mad r0.xyzw, cb0[0].xyzw, cb1[10].zzzz, r0.xyzw
mad r0.xyzw, cb0[2].xyzw, cb1[12].zzzz, r0.xyzw
mad r0.xyzw, cb0[3].xyzw, cb1[13].zzzz, r0.xyzw
dp4 o0.z, v0.xyzw, r0.xyzw
mul r0.xyzw, cb0[1].xyzw, cb1[11].wwww
mad r0.xyzw, cb0[0].xyzw, cb1[10].wwww, r0.xyzw
mad r0.xyzw, cb0[2].xyzw, cb1[12].wwww, r0.xyzw
mad r0.xyzw, cb0[3].xyzw, cb1[13].wwww, r0.xyzw
dp4 o0.w, v0.xyzw, r0.xyzw
dp4 o1.x, v0.xyzw, cb0[0].xyzw
dp4 o1.y, v0.xyzw, cb0[1].xyzw
dp4 o1.z, v0.xyzw, cb0[2].xyzw
dp4 o1.w, v0.xyzw, cb0[3].xyzw
dp3 r0.x, v1.xyzx, cb0[0].xyzx
dp3 r0.y, v1.xyzx, cb0[1].xyzx
dp3 r0.z, v1.xyzx, cb0[2].xyzx
dp3 r0.w, v1.xyzx, cb0[3].xyzx
dp4 r1.x, r0.xyzw, r0.xyzw
rsq r1.x, r1.x
mul o2.xyzw, r0.xyzw, r1.xxxx
dp3 r0.x, v2.xyzx, cb0[0].xyzx
dp3 r0.y, v2.xyzx, cb0[1].xyzx
dp3 r0.z, v2.xyzx, cb0[2].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o3.xyz, r0.wwww, r0.xyzx
mov o3.w, v2.w
dp4 r0.x, v3.xyzw, cb0[0].xyzw
dp4 r0.y, v3.xyzw, cb0[1].xyzw
dp4 r0.z, v3.xyzw, cb0[2].xyzw
dp4 r0.w, v3.xyzw, cb0[3].xyzw
dp4 r1.x, r0.xyzw, r0.xyzw
rsq r1.x, r1.x
mul o4.xyzw, r0.xyzw, r1.xxxx
mov o5.xy, v4.xyxx
mov o6.xyzw, v5.xyzw
ret 
// Approximately 48 instruction slots used
