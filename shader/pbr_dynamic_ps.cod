//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PBR_CONSTANTS
// {
//
//   float metallic_param;              // Offset:    0 Size:     4
//   float smooth_param;                // Offset:    4 Size:     4
//   float2 pad;                        // Offset:    8 Size:     8 [unused]
//
// }
//
// cbuffer CAMERA_CONSTANT_BUFFER
// {
//
//   struct CAMERA_CONSTANTS
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//
//   } camera_constants;                // Offset:    0 Size:   352
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   struct LIGHT_DIRECTION
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//       float iTime;                   // Offset:   32
//       float triple_speed_iTime;      // Offset:   36
//       float elapsedTime;             // Offset:   40
//       float shadow_map_num;          // Offset:   44
//       float4x4 mlvp[3];              // Offset:   48
//
//   } light_direction;                 // Offset:    0 Size:   240
//   
//   struct PLAYER
//   {
//       
//       float4 position;               // Offset:  240
//       float4 direction;              // Offset:  256
//
//   } player;                          // Offset:  240 Size:    32 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[0]                 sampler      NA          NA             s0      1 
// sampler_states[1]                 sampler      NA          NA             s1      1 
// sampler_states[2]                 sampler      NA          NA             s2      1 
// diffuse_map                       texture  float4          2d             t0      1 
// normal_map                        texture  float4          2d             t3      1 
// metallic_map                      texture  float4          2d             t6      1 
// CAMERA_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb2      1 
// PBR_CONSTANTS                     cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float       
// BINORMAL                 0   xyz         4     NONE   float       
// TEXCOORD                 0   xy          5     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 4
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v2.xyzx
mul r1.xyz, r0.zxyz, l(0.000000, 0.000000, 1.000100, 0.000000)
mad r1.xyz, r0.yzxy, l(0.000000, 1.000100, 0.000000, 0.000000), -r1.xyzx
dp2 r0.w, r1.yzyy, r1.yzyy
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r0.yzxy, r1.zxyz
mad r2.xyz, r1.yzxy, r0.zxyz, -r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v5.xyxx, t3.xyzw, s1
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r3.yyyy
mad r1.xyz, r3.xxxx, r2.xyzx, r1.xyzx
mad r0.xyz, r3.zzzz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -v1.xyzx, cb1[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, -cb2[0].xxxx
dp3_sat r0.w, r0.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3_sat r1.w, r0.xyzx, r1.xyzx
dp3_sat r1.x, r2.xyzx, r1.xyzx
add r1.y, r1.w, r1.w
mul r1.z, r0.w, r1.y
mul r0.w, r0.w, r1.w
mul r0.w, r0.w, l(3.141593)
dp3_sat r2.x, r0.xyzx, -cb2[0].xxxx
mul r1.y, r1.y, r2.x
div r1.yz, r1.yyzy, r1.xxxx
add r1.x, -r1.x, l(1.000000)
min r1.y, r1.y, r1.z
min r1.y, r1.y, l(1.000000)
mad r1.z, -r1.w, r1.w, l(1.000000)
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, l(-1.731302)
div r1.z, r1.z, r1.w
mul r1.w, r1.w, r1.w
mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.442695, 2.310400)
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
exp r1.z, r1.z
mul r1.z, r1.z, r1.w
mul r1.w, r1.x, r1.x
mul r1.w, r1.w, r1.w
mul r1.x, r1.w, r1.x
sample_indexable(texture2d)(float,float,float,float) r2.xy, v5.xyxx, t6.xwyz, s0
mul r2.xz, r2.xxyx, cb3[0].xxyx
mad r1.w, -r2.y, cb3[0].y, l(1.000000)
mad r1.x, r1.w, r1.x, r2.z
mul r1.x, r1.z, r1.x
mul r1.x, r1.y, r1.x
div r0.w, r1.x, r0.w
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb2[1].x
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v5.xyxx, t0.xyzw, s2
add r2.yzw, r1.xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r2.xyz, r2.xxxx, r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, -cb2[0].xyzx, -cb2[0].xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, -cb2[0].xyzx
dp3 r0.x, r0.xyzx, r3.xyzx
mad r0.x, r0.x, l(0.500000), l(0.500000)
max r0.x, r0.x, l(0.000000)
mul r0.xyz, r0.xxxx, r1.xyzx
mad r0.xyz, r0.xyzx, r1.wwww, r2.xyzx
add o0.xyz, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 78 instruction slots used
