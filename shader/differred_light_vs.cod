//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_input v0.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyz
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; 
//   v1.x <- input.normal.x; v1.y <- input.normal.y; v1.z <- input.normal.z; 
//   v2.x <- input.texcoord.x; v2.y <- input.texcoord.y; 
//   o3.x <- <main return value>.worldpos.x; o3.y <- <main return value>.worldpos.y; o3.z <- <main return value>.worldpos.z; 
//   o2.x <- <main return value>.normal.x; o2.y <- <main return value>.normal.y; o2.z <- <main return value>.normal.z; 
//   o1.x <- <main return value>.texcoord.x; o1.y <- <main return value>.texcoord.y; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 5 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\differred_light_vs.hlsl"
itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- output.normal.x; r0.y <- output.normal.y; r0.z <- output.normal.z
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- output.worldpos.x; r1.y <- output.worldpos.y; r1.z <- output.worldpos.z

#line 7
mov r2.xyz, v0.xyzx  // r2.x <- P.x; r2.y <- P.y; r2.z <- P.z
mov r2.w, l(1.000000)  // r2.w <- P.w

#line 8
mov r2.xyzw, r2.xyzw  // r2.x <- output.position.x; r2.y <- output.position.y; r2.z <- output.position.z; r2.w <- output.position.w

#line 9
mov r3.xy, v2.xyxx  // r3.x <- output.texcoord.x; r3.y <- output.texcoord.y

#line 10
mov o0.xyzw, r2.xyzw
mov o2.xyz, r0.xyzx
mov o3.xyz, r1.xyzx
mov o1.xy, r3.xyxx
ret 
// Approximately 11 instruction slots used
