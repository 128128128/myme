//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CAMERA_CONSTANT_BUFFER
// {
//
//   struct CAMERA_CONSTANTS
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//
//   } camera_constants;                // Offset:    0 Size:   352
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[1]                 sampler      NA          NA             s1      1 
// normal_map                        texture  float4          2d             t1      1 
// position_map                      texture  float4          2d             t2      1 
// metal_smooth_map                  texture  float4          2d             t3      1 
// emissive_map                      texture  float4          2d             t4      1 
// env_map                           texture  float4          2d            t15      1 
// CAMERA_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[1], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t15
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
//   v3.x <- pin.worldpos.x; v3.y <- pin.worldpos.y; v3.z <- pin.worldpos.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 17 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\environment_light_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t1.xyzw, s1  // r0.x <- normal.x; r0.y <- normal.y; r0.z <- normal.z; r0.w <- normal.w

#line 18
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t4.xyzw, s1
mov r1.xyz, r1.xyzx  // r1.x <- emissive.x; r1.y <- emissive.y; r1.z <- emissive.z

#line 20
mul r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r2.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r0.xyz, r0.xyzx, r2.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r0.xyz, r0.xyzx, r1.wwww  // r0.x <- N.x; r0.y <- N.y; r0.z <- N.z

#line 23
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t2.xyzw, s1
mov r2.xyz, r2.xyzx  // r2.x <- P.x; r2.y <- P.y; r2.z <- P.z

#line 24
mov r3.xyz, -cb1[0].xyzx
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- E.x; r2.y <- E.y; r2.z <- E.z

#line 25
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, r2.xyzx, r0.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r0.xyz, r0.xyzx, r1.wwww
add r0.xyz, r2.yxzy, r0.yxzy  // r0.x <- R.y; r0.y <- R.x; r0.z <- R.z

#line 27
mov r2.xz, r0.yyzy  // r2.x <- Dir.x; r2.z <- Dir.z

#line 28
itof r2.y, l(0)  // r2.y <- Dir.y

#line 29
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y
mul r0.y, r0.y, r2.x  // r0.y <- Dir.x

#line 31
mov r0.y, r0.y  // r0.y <- uv.x

#line 36
mul r0.y, r0.y, l(2.000000)
mov r0.z, l(-1.000000)
add r0.y, r0.z, r0.y  // r0.y <- uv.x

#line 38
mov r0.x, r0.x  // r0.x <- uv.y

#line 40
mov r0.z, -r0.x  // r0.z <- uv.y

#line 41
mul r0.xy, r0.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
add r0.yz, r0.xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)  // r0.y <- uv.x

#line 44
mul r0.x, r0.y, l(0.500000)  // r0.x <- uv.x

#line 46
itof r0.y, l(0)
lt r0.y, r0.y, r2.z
if_nz r0.y

#line 48
  itof r0.y, l(1)
  mov r1.w, -r0.x
  add r0.x, r0.y, r1.w

#line 49
endif 

#line 52
itof r0.y, l(1)
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t3.xzwy, s1
mov r1.w, -r1.w
add r0.y, r0.y, r1.w  // r0.y <- Roughness

#line 59
mov r1.w, l(1.000000)
mul r1.w, r0.y, r1.w
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r1.w  // r0.y <- level

#line 62
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xzxx, t15.xyzw, s1, r0.y
mov r0.xyz, r0.xyzx  // r0.x <- light.x; r0.y <- light.y; r0.z <- light.z

#line 67
itof r1.w, l(0)
ge r0.w, r1.w, r0.w
itof r2.xyz, l(1, 1, 1, 0)
add r0.xyz, r1.xyzx, r0.xyzx
movc r0.xyz, r0.wwww, r2.xyzx, r0.xyzx

#line 69
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 61 instruction slots used
