//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
// LightTexture                      texture  float4          2d             t1      1 
// RMTexture                         texture  float4          2d             t3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t3.yxzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t1.wxyz, s0
mul r1.xyz, r0.yzwy, l(0.250000, 0.250000, 0.250000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
mad r1.xyz, r2.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000), r1.xyzx
mad r0.yzw, r2.xxyz, r0.yyzw, -r1.xxyz
mad o0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mov o0.w, r2.w
ret 
// Approximately 9 instruction slots used
