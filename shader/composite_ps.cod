//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// DecalSampler                      sampler      NA          NA             s0      1 
// DiffuseTexture                    texture  float4          2d             t0      1 
// LightTexture                      texture  float4          2d             t1      1 
// RMTexture                         texture  float4          2d             t3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- input.position.x; v0.y <- input.position.y; v0.z <- input.position.z; v0.w <- input.position.w; 
//   v1.x <- input.texcoord.x; v1.y <- input.texcoord.y; 
//   v2.x <- input.normal.x; v2.y <- input.normal.y; v2.z <- input.normal.z; 
//   v3.x <- input.worldpos.x; v3.y <- input.worldpos.y; v3.z <- input.worldpos.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 17 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\composite_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 18
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t1.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- light.x; r1.y <- light.y; r1.z <- light.z

#line 21
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t3.xzwy, s0
mov r1.w, r1.w  // r1.w <- metallic

#line 26
mul r2.xyz, r0.xyzx, r1.xyzx  // r2.x <- m1.x; r2.y <- m1.y; r2.z <- m1.z

#line 27
mul r0.xyz, r0.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000)  // r0.x <- m0.x; r0.y <- m0.y; r0.z <- m0.z

#line 28
mul r1.xyz, r1.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
add r0.xyz, r0.xyzx, r1.xyzx

#line 29
mov r1.xyz, -r0.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, r1.wwww
add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 30
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 16 instruction slots used
