//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CONSTANT_BUFFER
// {
//
//   float glow_extraction_threshold;   // Offset:    0 Size:     4 [unused]
//   float blur_convolution_intensity;  // Offset:    4 Size:     4 [unused]
//   float lens_flare_threshold;        // Offset:    8 Size:     4
//   float lens_flare_ghost_dispersal;  // Offset:   12 Size:     4
//   int number_of_ghosts;              // Offset:   16 Size:     4
//   float lens_flare_intensity;        // Offset:   20 Size:     4
//   int2 options;                      // Offset:   24 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// anisotropic_sampler_state         sampler      NA          NA             s2      1 
// hdr_color_map                     texture  float4          2d             t0      1 
// gradient_map                      texture  float4          2d             t1      1 
// noise_map                         texture  float4          2d             t2      1 
// CONSTANT_BUFFER                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
add r0.xy, -v1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r1.xyzw, -r0.xyxy, l(0.500000, 0.500000, 0.500000, 0.500000)
mul r0.zw, r1.xxxy, cb0[0].wwww
mov r2.xyz, l(0,0,0,0)
mov r1.x, l(0)
loop 
  ige r1.y, r1.x, cb0[1].x
  breakc_nz r1.y
  itof r1.y, r1.x
  mad r3.xy, r0.zwzz, r1.yyyy, r0.xyxx
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t0.xyzw, s2
  add r4.xyz, r4.xyzx, -cb0[0].zzzz
  max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r3.xy, r3.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  dp2 r1.y, r3.xyxx, r3.xyxx
  sqrt r1.y, r1.y
  mul r1.y, r1.y, l(1.333333)
  min r1.y, r1.y, l(1.000000)
  mad r2.w, r1.y, l(-2.000000), l(3.000000)
  mul r1.y, r1.y, r1.y
  mad r1.y, -r2.w, r1.y, l(1.000000)
  mad r2.xyz, r4.xyzx, r1.yyyy, r2.xyzx
  iadd r1.x, r1.x, l(1)
endloop 
dp3 r0.x, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
dp2 r0.y, r1.zwzz, r1.zwzz
sqrt r0.y, r0.y
mul r0.y, r0.y, l(1.414214)
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yyyy, t1.wxyz, s2
mul r0.xyz, r0.yzwy, r0.xxxx
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t2.yzwx, s2
mul r0.xyz, r0.wwww, r0.xyzx
mul o0.xyz, r0.xyzx, cb0[1].yyyy
mov o0.w, l(1.000000)
ret 
// Approximately 35 instruction slots used
