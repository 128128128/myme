//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANTS
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   float4 color;                      // Offset:   64 Size:    16 [unused]
//   float shadow_reciever;             // Offset:   80 Size:     4
//   float3 pad;                        // Offset:   84 Size:    12 [unused]
//
// }
//
// cbuffer CAMERA_CONSTANT_BUFFER
// {
//
//   struct CAMERA_CONSTANTS
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//
//   } camera_constants;                // Offset:    0 Size:   352
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   struct LIGHT_DIRECTION
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//       float iTime;                   // Offset:   32
//       float triple_speed_iTime;      // Offset:   36
//       float elapsedTime;             // Offset:   40
//       float shadow_map_num;          // Offset:   44
//       float4x4 mlvp[3];              // Offset:   48
//
//   } light_direction;                 // Offset:    0 Size:   240
//   
//   struct PLAYER
//   {
//       
//       float4 position;               // Offset:  240
//       float4 direction;              // Offset:  256
//
//   } player;                          // Offset:  240 Size:    32 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// linear_sampler_state              sampler      NA          NA             s1      1 
// anisotropic_sampler_state         sampler      NA          NA             s2      1 
// diffuse_map1                      texture  float4          2d             t0      1 
// normal_map                        texture  float4          2d             t3      1 
// OBJECT_CONSTANTS                  cbuffer      NA          NA            cb0      1 
// CAMERA_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float       
// BINORMAL                 0   xyzw        4     NONE   float       
// TEXCOORD                 0   xy          5     NONE   float   xy  
// COLOR                    0   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
// SV_TARGET                3   xyzw        3   TARGET   float   xyzw
// SV_TARGET                4   xyzw        4   TARGET   float   xyzw
// SV_TARGET                5   xyzw        5   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[6], immediateIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- pin.sv_position.x; v0.y <- pin.sv_position.y; v0.z <- pin.sv_position.z; v0.w <- pin.sv_position.w; 
//   v1.x <- pin.position.x; v1.y <- pin.position.y; v1.z <- pin.position.z; v1.w <- pin.position.w; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; v2.w <- pin.normal.w; 
//   v3.x <- pin.tangent.x; v3.y <- pin.tangent.y; v3.z <- pin.tangent.z; v3.w <- pin.tangent.w; 
//   v4.x <- pin.binormal.x; v4.y <- pin.binormal.y; v4.z <- pin.binormal.z; v4.w <- pin.binormal.w; 
//   v5.x <- pin.texcoord.x; v5.y <- pin.texcoord.y; 
//   v6.x <- pin.color.x; v6.y <- pin.color.y; v6.z <- pin.color.z; v6.w <- pin.color.w; 
//   o5.x <- <main return value>.Shadow_param.x; o5.y <- <main return value>.Shadow_param.y; o5.z <- <main return value>.Shadow_param.z; o5.w <- <main return value>.Shadow_param.w; 
//   o4.x <- <main return value>.RM.x; o4.y <- <main return value>.RM.y; o4.z <- <main return value>.RM.z; o4.w <- <main return value>.RM.w; 
//   o3.x <- <main return value>.Position.x; o3.y <- <main return value>.Position.y; o3.z <- <main return value>.Position.z; o3.w <- <main return value>.Position.w; 
//   o2.x <- <main return value>.Normal.x; o2.y <- <main return value>.Normal.y; o2.z <- <main return value>.Normal.z; o2.w <- <main return value>.Normal.w; 
//   o1.x <- <main return value>.Depth.x; o1.y <- <main return value>.Depth.y; o1.z <- <main return value>.Depth.z; o1.w <- <main return value>.Depth.w; 
//   o0.x <- <main return value>.Color.x; o0.y <- <main return value>.Color.y; o0.z <- <main return value>.Color.z; o0.w <- <main return value>.Color.w
//
#line 121 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\terrain_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v5.xyxx, t0.xyzw, s2  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 123
mov r0.w, r0.w  // r0.w <- alpha

#line 124
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v2.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 125
itof r2.xy, l(0, 0, 0, 0)  // r2.x <- T.y; r2.y <- T.z
mov r2.z, l(1.000100)  // r2.z <- T.x

#line 126
mul r3.xyz, r1.yzxy, r2.yzxy
mul r2.xyz, r1.zxyz, r2.xyzx
mov r2.xyz, -r2.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- B.x; r2.y <- B.y; r2.z <- B.z

#line 127
mul r3.xyz, r1.zxyz, r2.yzxy
mul r4.xyz, r1.yzxy, r2.zxyz
mov r4.xyz, -r4.xyzx
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx  // r3.x <- T.x; r3.y <- T.y; r3.z <- T.z

#line 129
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v5.xyxx, t3.xyzw, s1
mov r4.xyz, r4.xyzx  // r4.x <- normal.x; r4.y <- normal.y; r4.z <- normal.z

#line 130
mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r5.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r4.xyz, r4.xyzx, r5.xyzx

#line 132
mul r3.xyz, r3.xyzx, r4.xxxx
mul r2.xyz, r2.xyzx, r4.yyyy
add r2.xyz, r2.xyzx, r3.xyzx
mul r1.xyz, r1.xyzx, r4.zzzz
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 134
mov r2.xyz, -cb2[0].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 135
itof r1.w, l(0)
dp3 r1.x, r1.xyzx, r2.xyzx
mul r1.x, r1.x, l(0.500000)
add r1.x, r1.x, l(0.500000)
max r1.x, r1.x, r1.w
mul r0.xyz, r0.xyzx, r1.xxxx  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z

#line 140
mov r0.xyz, r0.xyzx  // r0.x <- finalcolor.x; r0.y <- finalcolor.y; r0.z <- finalcolor.z

#line 142
mov r0.xyz, r0.xyzx  // r0.x <- ret.Color.x; r0.y <- ret.Color.y; r0.z <- ret.Color.z
mov r0.w, r0.w  // r0.w <- ret.Color.w

#line 143
mov r1.xyzw, l(0,1.000000,0,0)  // r1.x <- ret.Normal.x; r1.y <- ret.Normal.y; r1.z <- ret.Normal.z; r1.w <- ret.Normal.w

#line 144
mov r2.xyzw, v1.xyzw  // r2.x <- ret.Position.x; r2.y <- ret.Position.y; r2.z <- ret.Position.z; r2.w <- ret.Position.w

#line 145
mov r3.xyzw, -cb1[0].xyzw
add r3.xyzw, r3.xyzw, v1.xyzw
dp4 r3.x, r3.xyzw, r3.xyzw
sqrt r3.x, r3.x  // r3.x <- dist

#line 146
itof r3.yzw, l(0, 0, 0, 1)  // r3.y <- ret.Depth.y; r3.z <- ret.Depth.z; r3.w <- ret.Depth.w
mov r3.x, r3.x  // r3.x <- ret.Depth.x

#line 147
mov r4.xyzw, l(1.000000,0,0,0)  // r4.x <- ret.RM.x; r4.y <- ret.RM.y; r4.z <- ret.RM.z; r4.w <- ret.RM.w

#line 149
mul r5.x, cb0[5].x, l(255.000000)  // r5.x <- ret.Shadow_param.x
mul r5.y, cb0[5].x, l(255.000000)  // r5.y <- ret.Shadow_param.y
mul r5.z, cb0[5].x, l(255.000000)  // r5.z <- ret.Shadow_param.z
mul r5.w, cb0[5].x, l(255.000000)  // r5.w <- ret.Shadow_param.w

#line 150
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r3.xyzw
mov o2.xyzw, r1.xyzw
mov o3.xyzw, r2.xyzw
mov o4.xyzw, r4.xyzw
mov o5.xyzw, r5.xyzw
ret 
// Approximately 67 instruction slots used
