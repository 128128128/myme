//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   struct LIGHT_DIRECTION
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//       float iTime;                   // Offset:   32
//       float triple_speed_iTime;      // Offset:   36
//       float elapsedTime;             // Offset:   40
//       float shadow_map_num;          // Offset:   44
//       float4x4 mlvp[3];              // Offset:   48
//
//   } light_direction;                 // Offset:    0 Size:   240
//   
//   struct PLAYER
//   {
//       
//       float4 position;               // Offset:  240
//       float4 direction;              // Offset:  256
//
//   } player;                          // Offset:  240 Size:    32 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[15], dynamicIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o2.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   o1.x <- <main return value>.texcoord.x; o1.y <- <main return value>.texcoord.y; 
//   o2.x <- <main return value>.shadow_param.x; o2.y <- <main return value>.shadow_param.y; o2.z <- <main return value>.shadow_param.z; o2.w <- <main return value>.shadow_param.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 14 "C:\Users\2200167\Desktop\個人製作\MyMe02\MyMe\HLSL\static_shadowcast_vs.hlsl"
ftou r0.x, cb2[2].w
imul null, r0.x, r0.x, l(4)
mul r1.xyzw, v0.xxxx, cb2[r0.x + 3].xyzw
mul r2.xyzw, v0.yyyy, cb2[r0.x + 4].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, v0.zzzz, cb2[r0.x + 5].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, v0.wwww, cb2[r0.x + 6].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- pin.position.x; r0.y <- pin.position.y; r0.z <- pin.position.z; r0.w <- pin.position.w

#line 15
mov r0.xyzw, r0.xyzw  // r0.x <- pin.shadow_param.x; r0.y <- pin.shadow_param.y; r0.z <- pin.shadow_param.z; r0.w <- pin.shadow_param.w

#line 17
mov o0.xyzw, r0.xyzw
mov o2.xyzw, r0.xyzw
ret 
// Approximately 13 instruction slots used
