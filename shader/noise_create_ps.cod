//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb_noise
// {
//
//   float cb_kind_of_noise;            // Offset:    0 Size:     4
//   float cb_octaves;                  // Offset:    4 Size:     4
//   float cb_amplitude;                // Offset:    8 Size:     4
//   float cb_param;                    // Offset:   12 Size:     4
//   float2 cb_mat0;                    // Offset:   16 Size:     8
//   float2 cb_mat1;                    // Offset:   24 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cb_noise                          cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB4[2], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 5
eq r0.xy, cb4[0].xxxx, l(0.000000, 2.000000, 0.000000, 0.000000)
if_nz r0.x
  mul r0.xz, v0.xxyx, l(0.011111, 0.000000, 0.011111, 0.000000)
  mov r1.xy, r0.xzxx
  mov r0.w, l(0)
  mov r1.z, cb4[0].z
  mov r1.w, l(0)
  loop 
    itof r2.x, r1.w
    ge r2.x, r2.x, cb4[0].y
    breakc_nz r2.x
    round_ni r2.xy, r1.xyxx
    frc r2.zw, r1.xxxy
    mul r3.xy, r2.zwzz, r2.zwzz
    mad r2.zw, -r2.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
    mul r2.zw, r2.zzzw, r3.xxxy
    mad r3.xy, r2.xyxx, l(0.318310, 0.318310, 0.000000, 0.000000), l(0.710000, 0.113000, 0.000000, 0.000000)
    frc r3.xy, r3.xyxx
    mul r3.xy, r3.xyxx, l(50.000000, 50.000000, 0.000000, 0.000000)
    mul r3.z, r3.y, r3.x
    add r3.x, r3.y, r3.x
    mul r3.x, r3.x, r3.z
    frc r3.x, r3.x
    mad r3.x, r3.x, l(2.000000), l(-1.000000)
    add r4.xyzw, r2.xyxy, l(1.000000, 0.000000, 0.000000, 1.000000)
    mad r4.xyzw, r4.xyzw, l(0.318310, 0.318310, 0.318310, 0.318310), l(0.710000, 0.113000, 0.710000, 0.113000)
    frc r4.xyzw, r4.xyzw
    mul r4.xyzw, r4.xyzw, l(50.000000, 50.000000, 50.000000, 50.000000)
    mul r3.yz, r4.yywy, r4.xxzx
    add r4.xy, r4.ywyy, r4.xzxx
    mul r3.yz, r3.yyzy, r4.xxyx
    frc r3.yz, r3.yyzy
    mad r3.yz, r3.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
    add r3.y, -r3.x, r3.y
    mad r3.x, r2.z, r3.y, r3.x
    add r2.xy, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    mad r2.xy, r2.xyxx, l(0.318310, 0.318310, 0.000000, 0.000000), l(0.710000, 0.113000, 0.000000, 0.000000)
    frc r2.xy, r2.xyxx
    mul r2.xy, r2.xyxx, l(50.000000, 50.000000, 0.000000, 0.000000)
    mul r3.y, r2.y, r2.x
    add r2.x, r2.y, r2.x
    mul r2.x, r2.x, r3.y
    frc r2.x, r2.x
    mad r2.x, r2.x, l(2.000000), l(-1.000000)
    add r2.x, -r3.z, r2.x
    mad r2.x, r2.z, r2.x, r3.z
    add r2.x, -r3.x, r2.x
    mad r2.x, r2.w, r2.x, r3.x
    mad r0.w, r1.z, r2.x, r0.w
    dp2 r2.x, cb4[1].xyxx, r1.xyxx
    dp2 r2.y, cb4[1].zwzz, r1.xyxx
    mul r1.z, r1.z, cb4[0].z
    iadd r1.w, r1.w, l(1)
    mov r1.xy, r2.xyxx
  endloop 
else 
  mul r0.xz, v0.xxyx, cb4[0].wwww
  eq r1.x, cb4[0].x, l(1.000000)
  mul r0.xz, r0.xxzx, l(0.001389, 0.000000, 0.001389, 0.000000)
  round_ni r1.yz, r0.xxzx
  frc r0.xz, r0.xxzx
  mul r2.xy, r0.xzxx, r0.xzxx
  mad r0.xz, -r0.xxzx, l(2.000000, 0.000000, 2.000000, 0.000000), l(3.000000, 0.000000, 3.000000, 0.000000)
  mul r0.xz, r0.xxzx, r2.xxyx
  mad r2.xy, r1.yzyy, l(0.318310, 0.318310, 0.000000, 0.000000), l(0.710000, 0.113000, 0.000000, 0.000000)
  frc r2.xy, r2.xyxx
  mul r2.xy, r2.xyxx, l(50.000000, 50.000000, 0.000000, 0.000000)
  mul r1.w, r2.y, r2.x
  add r2.x, r2.y, r2.x
  mul r1.w, r1.w, r2.x
  frc r1.w, r1.w
  mad r1.w, r1.w, l(2.000000), l(-1.000000)
  add r2.xyzw, r1.yzyz, l(1.000000, 0.000000, 0.000000, 1.000000)
  mad r2.xyzw, r2.xyzw, l(0.318310, 0.318310, 0.318310, 0.318310), l(0.710000, 0.113000, 0.710000, 0.113000)
  frc r2.xyzw, r2.xyzw
  mul r2.xyzw, r2.xyzw, l(50.000000, 50.000000, 50.000000, 50.000000)
  mul r3.xy, r2.ywyy, r2.xzxx
  add r2.xy, r2.ywyy, r2.xzxx
  mul r2.xy, r2.xyxx, r3.xyxx
  frc r2.xy, r2.xyxx
  mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  add r2.x, -r1.w, r2.x
  mad r1.w, r0.x, r2.x, r1.w
  add r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mad r1.yz, r1.yyzy, l(0.000000, 0.318310, 0.318310, 0.000000), l(0.000000, 0.710000, 0.113000, 0.000000)
  frc r1.yz, r1.yyzy
  mul r1.yz, r1.yyzy, l(0.000000, 50.000000, 50.000000, 0.000000)
  mul r2.x, r1.z, r1.y
  add r1.y, r1.z, r1.y
  mul r1.y, r1.y, r2.x
  frc r1.y, r1.y
  mad r1.y, r1.y, l(2.000000), l(-1.000000)
  add r1.y, -r2.y, r1.y
  mad r0.x, r0.x, r1.y, r2.y
  add r0.x, -r1.w, r0.x
  mad r0.x, r0.z, r0.x, r1.w
  and r0.w, r0.x, r1.x
endif 
if_nz r0.y
  mov r0.xy, v0.xyxx
  mov r0.z, l(0)
  mul r1.xyz, r0.xyzx, l(0.006250, 0.011111, 8.000000, 0.000000)
  round_ni r1.xyz, r1.xyzx
  mad r0.xy, r0.xyxx, l(0.006250, 0.011111, 0.000000, 0.000000), -r1.xyxx
  mul r2.xy, r0.xyxx, r0.xyxx
  mad r2.zw, -r0.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
  mul r2.xy, r2.zwzz, r2.xyxx
  mul r3.xyz, r1.xyzx, l(0.103100, 0.113690, 0.137870, 0.000000)
  frc r3.xyz, r3.xyzx
  add r2.zw, r3.yyyx, l(0.000000, 0.000000, 19.190001, 19.190001)
  dp2 r0.z, r3.xyxx, r2.zwzz
  add r3.xyz, r0.zzzz, r3.xyzx
  add r2.zw, r3.yyyz, r3.xxxx
  mul r2.zw, r3.zzzy, r2.zzzw
  frc r2.zw, r2.zzzw
  mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  dp2 r0.z, r0.xyxx, r2.zwzz
  add r3.xyzw, r0.xyxy, l(-1.000000, -0.000000, -0.000000, -1.000000)
  add r4.xyz, r1.xyzx, l(1.000000, 0.000000, 0.000000, 0.000000)
  mul r4.xyz, r4.xyzx, l(0.103100, 0.113690, 0.137870, 0.000000)
  frc r4.xyz, r4.xyzx
  add r2.zw, r4.yyyx, l(0.000000, 0.000000, 19.190001, 19.190001)
  dp2 r1.w, r4.xyxx, r2.zwzz
  add r4.xyz, r1.wwww, r4.xyzx
  add r2.zw, r4.yyyz, r4.xxxx
  mul r2.zw, r4.zzzy, r2.zzzw
  frc r2.zw, r2.zzzw
  mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  dp2 r1.w, r3.xyxx, r2.zwzz
  add r1.w, -r0.z, r1.w
  mad r0.z, r2.x, r1.w, r0.z
  add r4.xyz, r1.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
  mul r4.xyz, r4.xyzx, l(0.103100, 0.113690, 0.137870, 0.000000)
  frc r4.xyz, r4.xyzx
  add r2.zw, r4.yyyx, l(0.000000, 0.000000, 19.190001, 19.190001)
  dp2 r1.w, r4.xyxx, r2.zwzz
  add r4.xyz, r1.wwww, r4.xyzx
  add r2.zw, r4.yyyz, r4.xxxx
  mul r2.zw, r4.zzzy, r2.zzzw
  frc r2.zw, r2.zzzw
  mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  dp2 r1.w, r3.zwzz, r2.zwzz
  add r0.xy, r0.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
  add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r1.xyz, r1.xyzx, l(0.103100, 0.113690, 0.137870, 0.000000)
  frc r1.xyz, r1.xyzx
  add r2.zw, r1.yyyx, l(0.000000, 0.000000, 19.190001, 19.190001)
  dp2 r2.z, r1.xyxx, r2.zwzz
  add r1.xyz, r1.xyzx, r2.zzzz
  add r2.zw, r1.yyyz, r1.xxxx
  mul r1.xy, r1.zyzz, r2.zwzz
  frc r1.xy, r1.xyxx
  mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r0.x, r0.xyxx, r1.xyxx
  add r0.x, -r1.w, r0.x
  mad r0.x, r2.x, r0.x, r1.w
  add r0.x, -r0.z, r0.x
  mad r0.x, r2.y, r0.x, r0.z
  div r0.yz, v0.xxyx, cb4[0].wwww
  round_ni r1.xyzw, r0.yzyz
  frc r0.yz, r0.yyzy
  mov r2.xy, l(2.000000,-1,0,0)
  loop 
    ilt r2.z, l(1), r2.y
    breakc_nz r2.z
    itof r3.x, r2.y
    mov r2.z, r2.x
    mov r2.w, l(-1)
    loop 
      ilt r3.z, l(1), r2.w
      breakc_nz r3.z
      itof r3.y, r2.w
      add r4.xyzw, r1.xyzw, r3.xyxy
      mad r3.zw, r4.xxxz, l(0.000000, 0.000000, 23.620001, 45.130001), l(0.000000, 0.000000, -300.000000, 256.000000)
      mad r3.zw, r4.yyyw, l(0.000000, 0.000000, 34.349998, 38.889999), r3.zzzw
      mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 89.419998, 89.419998)
      sincos null, r3.zw, r3.zzzw
      mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 343.420013, 343.420013)
      frc r3.zw, r3.zzzw
      add r3.yz, r3.xxyx, r3.zzwz
      add r3.yz, -r0.yyzy, r3.yyzy
      dp2 r3.y, r3.yzyy, r3.yzyy
      sqrt r3.y, r3.y
      lt r3.z, r3.y, r2.z
      movc r2.z, r3.z, r3.y, r2.z
      iadd r2.w, r2.w, l(1)
    endloop 
    mov r2.x, r2.z
    iadd r2.y, r2.y, l(1)
  endloop 
  add r0.y, -r2.x, l(1.000000)
  add r1.xy, v0.xyxx, v0.xyxx
  div r1.xy, r1.xyxx, cb4[0].wwww
  round_ni r2.xyzw, r1.xyxy
  frc r1.xy, r1.xyxx
  mov r0.z, l(2.000000)
  mov r1.z, l(-1)
  loop 
    ilt r1.w, l(1), r1.z
    breakc_nz r1.w
    itof r3.x, r1.z
    mov r1.w, r0.z
    mov r3.z, l(-1)
    loop 
      ilt r3.w, l(1), r3.z
      breakc_nz r3.w
      itof r3.y, r3.z
      add r4.xyzw, r2.xyzw, r3.xyxy
      mad r4.xz, r4.xxzx, l(23.620001, 0.000000, 45.130001, 0.000000), l(-300.000000, 0.000000, 256.000000, 0.000000)
      mad r4.xy, r4.ywyy, l(34.349998, 38.889999, 0.000000, 0.000000), r4.xzxx
      mul r4.xy, r4.xyxx, l(89.419998, 89.419998, 0.000000, 0.000000)
      sincos null, r4.xy, r4.xyxx
      mul r4.xy, r4.xyxx, l(343.420013, 343.420013, 0.000000, 0.000000)
      frc r4.xy, r4.xyxx
      add r3.yw, r3.xxxy, r4.xxxy
      add r3.yw, -r1.xxxy, r3.yyyw
      dp2 r3.y, r3.ywyy, r3.ywyy
      sqrt r3.y, r3.y
      lt r3.w, r3.y, r1.w
      movc r1.w, r3.w, r3.y, r1.w
      iadd r3.z, r3.z, l(1)
    endloop 
    mov r0.z, r1.w
    iadd r1.z, r1.z, l(1)
  endloop 
  add r0.z, -r0.z, l(1.000000)
  mad r0.y, r0.z, l(0.500000), r0.y
  mul r1.xy, v0.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
  div r1.xy, r1.xyxx, cb4[0].wwww
  round_ni r2.xyzw, r1.xyxy
  frc r1.xy, r1.xyxx
  mov r0.z, l(2.000000)
  mov r1.z, l(-1)
  loop 
    ilt r1.w, l(1), r1.z
    breakc_nz r1.w
    itof r3.x, r1.z
    mov r1.w, r0.z
    mov r3.z, l(-1)
    loop 
      ilt r3.w, l(1), r3.z
      breakc_nz r3.w
      itof r3.y, r3.z
      add r4.xyzw, r2.xyzw, r3.xyxy
      mad r4.xz, r4.xxzx, l(23.620001, 0.000000, 45.130001, 0.000000), l(-300.000000, 0.000000, 256.000000, 0.000000)
      mad r4.xy, r4.ywyy, l(34.349998, 38.889999, 0.000000, 0.000000), r4.xzxx
      mul r4.xy, r4.xyxx, l(89.419998, 89.419998, 0.000000, 0.000000)
      sincos null, r4.xy, r4.xyxx
      mul r4.xy, r4.xyxx, l(343.420013, 343.420013, 0.000000, 0.000000)
      frc r4.xy, r4.xyxx
      add r3.yw, r3.xxxy, r4.xxxy
      add r3.yw, -r1.xxxy, r3.yyyw
      dp2 r3.y, r3.ywyy, r3.ywyy
      sqrt r3.y, r3.y
      lt r3.w, r3.y, r1.w
      movc r1.w, r3.w, r3.y, r1.w
      iadd r3.z, r3.z, l(1)
    endloop 
    mov r0.z, r1.w
    iadd r1.z, r1.z, l(1)
  endloop 
  add r0.z, -r0.z, l(1.000000)
  mad r0.y, r0.z, l(0.250000), r0.y
  add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r0.x, r0.y, r0.x
  mul o0.xyz, r0.xxxx, l(0.250000, 0.250000, 0.250000, 0.000000)
  mov o0.w, l(1.000000)
  ret 
else 
  mad r0.x, r0.w, l(0.500000), l(0.500000)
endif 
mov o0.xyz, r0.xxxx
mov o0.w, l(1.000000)
ret 
// Approximately 274 instruction slots used
