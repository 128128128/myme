//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer posteffect_buffer
// {
//
//   float contrast;                    // Offset:    0 Size:     4
//   float saturation;                  // Offset:    4 Size:     4
//   float cb_vignette;                 // Offset:    8 Size:     4
//   float cb_bloom;                    // Offset:   12 Size:     4
//   float cb_outline;                  // Offset:   16 Size:     4
//   float cb_color_grading;            // Offset:   20 Size:     4
//   float2 pad;                        // Offset:   24 Size:     8 [unused]
//   float4 colorlv;                    // Offset:   32 Size:    16
//   
//   struct FOG_BUFFER
//   {
//       
//       float3 color;                  // Offset:   48
//       float highlight_intensity;     // Offset:   60
//       float3 highlight_color;        // Offset:   64
//       float highlight_power;         // Offset:   76
//       float global_density;          // Offset:   80
//       float height_falloff;          // Offset:   84
//       float start_depth;             // Offset:   88
//       float start_height;            // Offset:   92
//
//   } fog;                             // Offset:   48 Size:    48
//
// }
//
// cbuffer CAMERA_CONSTANT_BUFFER
// {
//
//   struct CAMERA_CONSTANTS
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//
//   } camera_constants;                // Offset:    0 Size:   352
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[0]                 sampler      NA          NA             s0      1 
// sampler_states[1]                 sampler      NA          NA             s1      1 
// diffuse_texture                   texture  float4          2d             t0      1 
// depth_texture                     texture  float4          2d             t1      1 
// normal_texture                    texture  float4          2d             t2      1 
// position_texture                  texture  float4          2d             t3      1 
// CAMERA_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
// posteffect_buffer                 cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB9[6], immediateIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 8
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t3.xyzw, s1
mul r2.xy, cb9[0].wwww, l(0.003000, 0.002000, 0.000000, 0.000000)
mov r3.z, l(0)
mov r4.xyz, l(0,0,0,0)
mov r1.w, l(0)
loop 
  ige r2.z, r1.w, l(7)
  breakc_nz r2.z
  iadd r2.z, r1.w, l(1)
  itof r2.w, r2.z
  mul r3.xy, r2.wwww, r2.xyxx
  itof r2.w, r1.w
  mad r2.w, -r2.w, l(0.142857), l(1.000000)
  add r5.xyzw, r3.xzzy, v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t0.xyzw, s0
  add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  add r6.xyz, r6.xyzx, r6.xyzx
  max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r6.xyz, r6.xyzx, r2.wwww, r4.xyzx
  mov r3.w, -r3.x
  add r5.xy, r3.wzww, v1.xyxx
  sample_indexable(texture2d)(float,float,float,float) r7.xyz, r5.xyxx, t0.xyzw, s0
  add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  add r7.xyz, r7.xyzx, r7.xyzx
  max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r6.xyz, r7.xyzx, r2.wwww, r6.xyzx
  mad r5.xy, r3.zyzz, l(1.000000, -1.000000, 0.000000, 0.000000), v1.xyxx
  sample_indexable(texture2d)(float,float,float,float) r7.xyz, r5.xyxx, t0.xyzw, s0
  add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  add r7.xyz, r7.xyzx, r7.xyzx
  max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r6.xyz, r7.xyzx, r2.wwww, r6.xyzx
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t0.xyzw, s0
  add r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  add r5.xyz, r5.xyzx, r5.xyzx
  max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r5.xyz, r5.xyzx, r2.wwww, r6.xyzx
  mad r6.xyzw, r3.xyxy, l(0.700000, -0.700000, -0.700000, -0.700000), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r7.xyz, r6.xyxx, t0.xyzw, s0
  add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  add r7.xyz, r7.xyzx, r7.xyzx
  max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r5.xyz, r7.xyzx, r2.wwww, r5.xyzx
  sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.zwzz, t0.xyzw, s0
  add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  add r6.xyz, r6.xyzx, r6.xyzx
  max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r5.xyz, r6.xyzx, r2.wwww, r5.xyzx
  mad r6.xyzw, r3.xyxy, l(0.700000, 0.700000, -0.700000, 0.700000), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r3.xyw, r6.xyxx, t0.xywz, s0
  add r3.xyw, r3.xyxw, l(-0.500000, -0.500000, 0.000000, -0.500000)
  add r3.xyw, r3.xyxw, r3.xyxw
  max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r3.xyw, r3.xyxw, r2.wwww, r5.xyxz
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r6.zwzz, t0.xyzw, s0
  add r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  add r5.xyz, r5.xyzx, r5.xyzx
  max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r4.xyz, r5.xyzx, r2.wwww, r3.xywx
  mov r1.w, r2.z
endloop 
add r2.xyz, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r2.xyz, r2.xyzx, r2.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r2.xyz, r2.xyzx, r4.xyzx
mul r2.xyz, r2.xyzx, cb9[0].wwww
mad r0.xyz, r2.xyzx, l(0.017544, 0.017544, 0.017544, 0.000000), r0.xyzx
lt r2.xy, l(0.300000, 0.300000, 0.000000, 0.000000), cb9[1].yxyy
add r3.xyz, r0.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r3.xyz, r3.xyzx, cb9[0].xxxx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r1.w, r3.y, r3.x
add r1.w, r3.z, r1.w
mul r2.z, r1.w, l(0.333333)
mad r3.xyz, -r1.wwww, l(0.333333, 0.333333, 0.333333, 0.000000), r3.xyzx
mad r3.xyz, r3.xyzx, cb9[0].yyyy, r2.zzzz
mul r3.xyz, r3.xyzx, cb9[2].xyzx
movc r0.xyz, r2.xxxx, r3.xyzx, r0.xyzx
if_nz r2.y
  sample_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t1.yzwx, s0
  add r2.xyzw, v1.xyxy, l(0.001000, 0.000000, 0.000000, 0.001500)
  sample_indexable(texture2d)(float,float,float,float) r3.x, r2.xyxx, t1.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t1.yzxw, s0
  add r2.w, r1.w, -r3.x
  add r2.z, r1.w, -r2.z
  mul r1.w, r1.w, l(0.100000)
  ge r2.w, r1.w, |r2.w|
  if_nz r2.w
    ge r3.x, r1.w, |r2.z|
    if_nz r3.x
      sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t2.xyzw, s0
      sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.xyxx, t2.xyzw, s0
      mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      dp3 r3.x, r3.xyzx, r4.xyzx
      ge r3.x, r3.x, l(0.100000)
      and r3.x, r3.x, l(0x3f800000)
    else 
      mov r3.x, l(0)
    endif 
  else 
    mov r3.x, l(0)
  endif 
  if_nz r2.w
    ge r1.w, r1.w, |r2.z|
    if_nz r1.w
      sample_indexable(texture2d)(float,float,float,float) r3.yzw, v1.xyxx, t2.wxyz, s0
      sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t2.xyzw, s0
      mad r3.yzw, r3.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      dp3 r1.w, r3.yzwy, r2.xyzx
      ge r1.w, r1.w, l(0.100000)
      and r1.w, r1.w, l(0x3f800000)
    else 
      mov r1.w, l(0)
    endif 
  else 
    mov r1.w, l(0)
  endif 
  mad r2.xyz, r0.xyzx, r3.xxxx, l(-1.000000, -1.000000, -0.000000, 0.000000)
  mad r0.xyz, r1.wwww, r2.xyzx, l(1.000000, 1.000000, 0.000000, 0.000000)
endif 
add r2.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
sqrt r1.w, r1.w
mul r1.w, r1.w, l(1.500000)
add r2.x, cb9[0].z, l(-1.000000)
mad r1.w, r2.x, l(0.500000), r1.w
add r1.w, r1.w, l(-0.100000)
mul r2.x, r1.w, r1.w
mul_sat r1.w, r1.w, r2.x
mad r0.xyz, r1.wwww, -r0.xyzx, r0.xyzx
add r1.xyz, r1.xyzx, -cb1[0].xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
add r1.x, r1.x, -cb9[5].z
max r1.x, r1.x, l(0.000000)
mul r1.z, cb9[5].w, cb9[5].y
mul r1.z, r1.z, l(1.442695)
exp r1.z, r1.z
mul r1.x, r1.z, r1.x
lt r1.z, l(0.010000), r1.y
mul r1.y, r1.y, cb9[5].y
mul r1.w, r1.y, l(-1.442695)
exp r1.w, r1.w
add r1.w, -r1.w, l(1.000000)
div r1.y, r1.w, r1.y
mul r1.y, r1.y, r1.x
movc r1.x, r1.z, r1.y, r1.x
mul r1.x, r1.x, -cb9[5].x
mul r1.x, r1.x, l(1.442695)
exp r1.x, r1.x
add r0.xyz, r0.xyzx, -cb9[3].xyzx
mad r0.xyz, r1.xxxx, r0.xyzx, cb9[3].xyzx
dp3 r1.x, r0.xyzx, l(0.597190, 0.354580, 0.048230, 0.000000)
dp3 r1.y, r0.xyzx, l(0.076000, 0.908340, 0.015660, 0.000000)
dp3 r1.z, r0.xyzx, l(0.028400, 0.133830, 0.837770, 0.000000)
add r0.xyz, r1.xyzx, l(0.024579, 0.024579, 0.024579, 0.000000)
mad r0.xyz, r1.xyzx, r0.xyzx, l(-0.000091, -0.000091, -0.000091, 0.000000)
mad r2.xyz, r1.xyzx, l(0.983729, 0.983729, 0.983729, 0.000000), l(0.432951, 0.432951, 0.432951, 0.000000)
mad r1.xyz, r1.xyzx, r2.xyzx, l(0.238081, 0.238081, 0.238081, 0.000000)
div r0.xyz, r0.xyzx, r1.xyzx
dp3_sat r1.x, r0.xyzx, l(1.604750, -0.531080, -0.073670, 0.000000)
dp3_sat r1.y, r0.xyzx, l(-0.102080, 1.108130, -0.006050, 0.000000)
dp3_sat r1.z, r0.xyzx, l(-0.003270, -0.072760, 1.076020, 0.000000)
log r0.xyz, r1.xyzx
mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
exp o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 170 instruction slots used
