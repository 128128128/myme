//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CAMERA_CONSTANT_BUFFER
// {
//
//   struct CAMERA_CONSTANTS
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//
//   } camera_constants;                // Offset:    0 Size:   352
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   struct LIGHT_DIRECTION
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//       float iTime;                   // Offset:   32
//       float triple_speed_iTime;      // Offset:   36
//       float elapsedTime;             // Offset:   40
//       float shadow_map_num;          // Offset:   44
//       float4x4 mlvp[3];              // Offset:   48
//
//   } light_direction;                 // Offset:    0 Size:   240
//   
//   struct PLAYER
//   {
//       
//       float4 position;               // Offset:  240
//       float4 direction;              // Offset:  256
//
//   } player;                          // Offset:  240 Size:    32 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// decal_sampler                     sampler      NA          NA             s0      1 
// albedo_texture                    texture  float4          2d             t0      1 
// normal_texture                    texture  float4          2d             t1      1 
// rm_texture                        texture  float4          2d             t3      1 
// CAMERA_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 5
add r0.xyz, -v3.xyzx, cb1[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mad r1.xyz, r0.xyzx, r0.wwww, -cb2[0].xyzx
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t1.xyzw, s0
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3_sat r0.w, r2.xyzx, r1.xyzx
mad r1.w, -r0.w, r0.w, l(1.000000)
mul r1.w, r1.w, l(-1.731302)
mul r2.w, r0.w, r0.w
div r1.w, r1.w, r2.w
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(2.310400)
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mul r1.w, r1.w, l(1.442695)
exp r1.w, r1.w
mul r1.w, r1.w, r2.w
dp3_sat r2.w, r0.xyzx, r1.xyzx
dp3_sat r1.x, -cb2[0].xyzx, r1.xyzx
mad r1.x, r1.x, r1.x, l(-0.750000)
dp3_sat r0.x, r2.xyzx, r0.xyzx
dp3_sat r0.y, r2.xyzx, -cb2[0].xyzx
add r0.z, -r2.w, l(1.000000)
mul r1.y, r0.z, r0.z
mul r1.y, r1.y, r1.y
mul r0.z, r0.z, r1.y
sample_indexable(texture2d)(float,float,float,float) r1.yz, v1.xyxx, t3.yxwz, s0
add r2.x, -r1.z, l(1.000000)
mad r0.z, r2.x, r0.z, r1.z
mul r0.z, r1.w, r0.z
add r1.w, r0.w, r0.w
mul r0.w, r0.x, r0.w
mul r0.w, r0.w, l(3.141593)
mul r2.y, r0.x, r1.w
mul r1.w, r0.y, r1.w
div r1.w, r1.w, r2.w
div r2.y, r2.y, r2.w
min r1.w, r1.w, r2.y
min r1.w, r1.w, l(1.000000)
mul r0.z, r0.z, r1.w
div r0.z, r0.z, r0.w
max r0.z, r0.z, l(0.000000)
mul r2.yzw, r0.zzzz, cb2[1].xxyz
add r0.x, -r0.x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t0.xyzw, s0
add r4.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, r1.yyyy, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.yzw, r2.yyzw, r4.xxyz
mul r1.yzw, r1.zzzz, r2.yyzw
mul r0.z, r0.x, r0.x
mul r0.z, r0.z, r0.z
mul r0.x, r0.z, r0.x
mad r0.x, r1.x, r0.x, l(1.000000)
add r0.z, -r0.y, l(1.000000)
mul r2.yzw, r0.yyyy, cb2[1].xxyz
mul r2.yzw, r2.yyzw, l(0.000000, 0.318310, 0.318310, 0.318310)
mul r0.y, r0.z, r0.z
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.z
mad r0.y, r1.x, r0.y, l(1.000000)
mul r0.x, r0.x, r0.y
mul r0.x, r0.x, l(0.831126)
mul r0.xyz, r0.xxxx, r3.xyzx
mul r0.xyz, r2.yzwy, r0.xyzx
mad r0.xyz, r0.xyzx, r2.xxxx, r1.yzwy
add o0.xyz, r3.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 72 instruction slots used
