//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CAMERA_CONSTANT_BUFFER
// {
//
//   struct CAMERA_CONSTANTS
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//
//   } camera_constants;                // Offset:    0 Size:   352
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   struct LIGHT_DIRECTION
//   {
//       
//       float4 direction;              // Offset:    0
//       float4 color;                  // Offset:   16
//       float iTime;                   // Offset:   32
//       float triple_speed_iTime;      // Offset:   36
//       float elapsedTime;             // Offset:   40
//       float shadow_map_num;          // Offset:   44
//       float4x4 mlvp[3];              // Offset:   48
//
//   } light_direction;                 // Offset:    0 Size:   240
//   
//   struct PLAYER
//   {
//       
//       float4 position;               // Offset:  240
//       float4 direction;              // Offset:  256
//
//   } player;                          // Offset:  240 Size:    32 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// decal_sampler                     sampler      NA          NA             s0      1 
// albedo_texture                    texture  float4          2d             t0      1 
// normal_texture                    texture  float4          2d             t1      1 
// rm_texture                        texture  float4          2d             t3      1 
// shadow_param_texture              texture  float4          2d             t7      1 
// shadow_map                        texture  float4          2d            t14      1 
// CAMERA_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   v2.x <- pin.normal.x; v2.y <- pin.normal.y; v2.z <- pin.normal.z; 
//   v3.x <- pin.worldpos.x; v3.y <- pin.worldpos.y; v3.z <- pin.worldpos.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 4 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\pbr_common.hlsli"
mov r0.x, l(3.141593)  // r0.x <- PI

#line 99 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\dir_light_ps.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t0.wxyz, s0
mov r0.yzw, r0.yyzw  // r0.y <- albedo_color.x; r0.z <- albedo_color.y; r0.w <- albedo_color.z

#line 101
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t1.xyzw, s0
mov r1.xyz, r1.xyzx  // r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z

#line 103
mul r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r2.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r1.xyz, r1.xyzx, r2.xyzx

#line 105
mov r2.xyz, v3.xyzx  // r2.x <- world_pos.x; r2.y <- world_pos.y; r2.z <- world_pos.z

#line 107
mov r0.yzw, r0.yyzw  // r0.y <- specColor.x; r0.z <- specColor.y; r0.w <- specColor.z

#line 109
sample_indexable(texture2d)(float,float,float,float) r3.xy, v1.xyxx, t3.xwyz, s0  // r3.y <- metallic_smooth.w
mov r3.xy, r3.xyxx  // r3.x <- metallic_smooth.x

#line 112
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t7.yzwx, s0
mov r1.w, r1.w  // r1.w <- shadow_param.x

#line 114
mov r4.xyz, -r2.xyzx
add r4.xyz, r4.xyzx, cb1[0].xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r4.xyzx  // r4.x <- to_eye.x; r4.y <- to_eye.y; r4.z <- to_eye.z

#line 116
itof r5.xyz, l(0, 0, 0, 0)  // r5.x <- lig.x; r5.y <- lig.y; r5.z <- lig.z

#line 124
nop 
mov r2.xyz, r2.xyzx

#line 127 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\pbr_common.hlsli"
mov r2.w, l(0)  // r2.w <- shadow

#line 130
mul r6.xyzw, r2.xxxx, cb2[3].xyzw
mul r7.xyzw, r2.yyyy, cb2[4].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r2.zzzz, cb2[5].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- posInLVP.x; r6.y <- posInLVP.y; r6.z <- posInLVP.z; r6.w <- posInLVP.w

#line 131
div r3.zw, r6.xxxy, r6.wwww  // r3.z <- shadowMapUV.x; r3.w <- shadowMapUV.y

#line 132
div r4.w, r6.z, r6.w  // r4.w <- zInLVP

#line 133
mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000)

#line 134
add r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)

#line 136
ge r5.w, r3.z, l(0.000000)
ge r6.x, l(1.000000), r3.z
and r5.w, r5.w, r6.x
ge r6.x, r3.w, l(0.000000)
and r5.w, r5.w, r6.x
ge r6.x, l(1.000000), r3.w
and r5.w, r5.w, r6.x
if_nz r5.w

#line 140
  sample_indexable(texture2d)(float,float,float,float) r3.z, r3.zwzz, t14.yzxw, s0  // r3.z <- shadowValue.x

#line 143
  add r3.z, r3.z, l(0.001000)
  ge r3.z, r4.w, r3.z
  if_nz r3.z

#line 145
    mov r2.w, l(1.000000)

#line 146
  endif 

#line 148
endif 

#line 128
not r3.z, r5.w
not r3.z, r3.z
or r3.z, r5.w, r3.z
if_z r3.z

#line 130
  mul r6.xyzw, r2.xxxx, cb2[7].xyzw
  mul r7.xyzw, r2.yyyy, cb2[8].xyzw
  add r6.xyzw, r6.xyzw, r7.xyzw
  mul r7.xyzw, r2.zzzz, cb2[9].xyzw
  add r6.xyzw, r6.xyzw, r7.xyzw
  mul r7.xyzw, cb2[10].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- posInLVP.x; r6.y <- posInLVP.y; r6.z <- posInLVP.z; r6.w <- posInLVP.w

#line 131
  if_z r3.z
    div r6.xy, r6.xyxx, r6.wwww  // r6.x <- shadowMapUV.x; r6.y <- shadowMapUV.y

#line 132
    div r3.w, r6.z, r6.w  // r3.w <- zInLVP

#line 133
    mul r6.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)

#line 134
    add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)

#line 136
    ge r4.w, r6.x, l(0.000000)
    ge r5.w, l(1.000000), r6.x
    and r4.w, r4.w, r5.w
    ge r5.w, r6.y, l(0.000000)
    and r4.w, r4.w, r5.w
    ge r5.w, l(1.000000), r6.y
    and r4.w, r4.w, r5.w
    if_nz r4.w

#line 140
      sample_indexable(texture2d)(float,float,float,float) r5.w, r6.xyxx, t14.yzwx, s0  // r5.w <- shadowValue.x

#line 143
      add r5.w, r5.w, l(0.001000)
      ge r3.w, r3.w, r5.w
      if_nz r3.w

#line 145
        mov r2.w, l(1.000000)

#line 146
      endif 

#line 148
    endif 
  else   // Prior locations: r6.x <- posInLVP.x; r6.y <- posInLVP.y; r3.w <- shadowMapUV.y; r4.w <- zInLVP
    mov r4.w, l(-1)
  endif 
  or r3.z, r3.z, r4.w

#line 128
  not r3.w, r3.z
  not r3.w, r3.w
  or r3.z, r3.z, r3.w

#line 149
else   // Prior locations: r6.y <- posInLVP.y; r3.w <- shadowMapUV.y; r4.w <- zInLVP
  mov r3.z, l(-1)
endif 

#line 128
if_z r3.z

#line 130
  mul r6.xyzw, r2.xxxx, cb2[11].xyzw
  mul r7.xyzw, r2.yyyy, cb2[12].xyzw
  add r6.xyzw, r6.xyzw, r7.xyzw
  mul r7.xyzw, r2.zzzz, cb2[13].xyzw
  add r6.xyzw, r6.xyzw, r7.xyzw
  mul r7.xyzw, cb2[14].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  add r6.xyzw, r6.xyzw, r7.xyzw  // r6.x <- posInLVP.x; r6.y <- posInLVP.y; r6.z <- posInLVP.z; r6.w <- posInLVP.w

#line 131
  div r2.xy, r6.xyxx, r6.wwww  // r2.x <- shadowMapUV.x; r2.y <- shadowMapUV.y

#line 132
  div r2.z, r6.z, r6.w  // r2.z <- zInLVP

#line 133
  mul r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)

#line 134
  add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)

#line 136
  ge r3.z, r2.x, l(0.000000)
  ge r3.w, l(1.000000), r2.x
  and r3.z, r3.w, r3.z
  ge r3.w, r2.y, l(0.000000)
  and r3.z, r3.w, r3.z
  ge r3.w, l(1.000000), r2.y
  and r3.z, r3.w, r3.z
  if_nz r3.z

#line 140
    sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t14.xyzw, s0  // r2.x <- shadowValue.x

#line 143
    add r2.x, r2.x, l(0.001000)
    ge r2.x, r2.z, r2.x
    if_nz r2.x

#line 145
      mov r2.w, l(1.000000)

#line 146
    endif 

#line 148
  endif 

#line 149
endif 

#line 150
mov r2.w, r2.w  // r2.w <- <calc_shadow_rate return value>

#line 124 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\dir_light_ps.hlsl"
mul r1.w, r1.w, r2.w  // r1.w <- shadow

#line 126
lt r1.w, l(0.900000), r1.w

#line 134
if_z r1.w
  nop 
  mov r1.xyz, r1.xyzx
  mov r2.xyz, -cb2[0].xyzx
  mov r4.xyz, r4.xyzx

#line 95 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\pbr_common.hlsli"
  add r6.xyz, r2.xyzx, r4.xyzx
  dp3 r1.w, r6.xyzx, r6.xyzx
  rsq r1.w, r1.w
  mul r6.xyz, r1.wwww, r6.xyzx  // r6.x <- H.x; r6.y <- H.y; r6.z <- H.z

#line 98
  mov r1.w, l(0.500000)  // r1.w <- roughness

#line 100
  mov r2.w, l(-0.000000)
  add r2.w, r2.w, l(0.500000)
  mul r2.w, r1.w, r2.w
  add r2.w, r2.w, l(0.000000)  // r2.w <- energyBias

#line 101
  mov r3.z, l(-1.000000)
  add r3.z, r3.z, l(0.662252)
  mul r3.z, r1.w, r3.z
  add r3.z, r3.z, l(1.000000)  // r3.z <- energyFactor

#line 104
  dp3 r3.w, r2.xyzx, r6.xyzx
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)  // r3.w <- dotLH

#line 108
  mul r4.w, r3.w, l(2.000000)
  mul r3.w, r3.w, r4.w
  mul r1.w, r1.w, r3.w
  add r1.w, r1.w, r2.w  // r1.w <- Fd90

#line 111
  dp3 r2.x, r1.xyzx, r2.xyzx
  max r2.x, r2.x, l(0.000000)
  min r2.x, r2.x, l(1.000000)  // r2.x <- dotNL

#line 112
  itof r2.y, l(1)
  itof r2.z, l(1)
  mov r2.z, -r2.z
  add r2.z, r1.w, r2.z
  itof r2.w, l(1)
  mov r2.x, -r2.x
  add r2.x, r2.x, r2.w
  mov r2.w, l(1.000000)
  mul r2.w, r2.x, r2.w
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, r2.w
  mul r2.x, r2.x, r2.z
  add r2.x, r2.x, r2.y  // r2.x <- FL

#line 115
  dp3 r2.y, r1.xyzx, r4.xyzx
  max r2.y, r2.y, l(0.000000)
  min r2.y, r2.y, l(1.000000)  // r2.y <- dotNV

#line 116
  itof r2.z, l(1)
  itof r2.w, l(1)
  mov r2.w, -r2.w
  add r1.w, r1.w, r2.w
  itof r2.w, l(1)
  mov r2.y, -r2.y
  add r2.y, r2.y, r2.w
  mov r2.w, l(1.000000)
  mul r2.w, r2.y, r2.w
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, r2.w
  mul r1.w, r1.w, r2.y
  add r1.w, r1.w, r2.z  // r1.w <- FV

#line 121
  mul r1.w, r1.w, r2.x
  mul r1.w, r3.z, r1.w  // r1.w <- <CalcDiffuseFromFresnel return value>

#line 134 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\dir_light_ps.hlsl"
  mov r1.w, r1.w  // r1.w <- diffuseFromFresnel

#line 138
  mov r2.xyz, -cb2[0].xyzx
  dp3 r2.x, r1.xyzx, r2.xyzx
  max r2.x, r2.x, l(0.000000)
  min r2.x, r2.x, l(1.000000)  // r2.x <- NdotL

#line 139
  mul r2.xyz, r2.xxxx, cb2[1].xyzx
  div r2.xyz, r2.xyzx, r0.xxxx  // r2.x <- lambertDiffuse.x; r2.y <- lambertDiffuse.y; r2.z <- lambertDiffuse.z

#line 142
  mul r6.xyz, r0.yzwy, r1.wwww
  mul r2.xyz, r2.xyzx, r6.xyzx  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z

#line 147
  nop 
  mov r6.xyz, -cb2[0].xyzx
  mov r4.xyz, r4.xyzx
  mov r1.xyz, r1.xyzx
  mov r1.w, r3.y

#line 41 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\pbr_common.hlsli"
  mov r2.w, l(0.760000)  // r2.w <- microfacet

#line 45
  mov r1.w, r1.w  // r1.w <- f0

#line 48
  add r7.xyz, r4.xyzx, r6.xyzx
  dp3 r3.z, r7.xyzx, r7.xyzx
  rsq r3.z, r3.z
  mul r7.xyz, r3.zzzz, r7.xyzx  // r7.x <- H.x; r7.y <- H.y; r7.z <- H.z

#line 51
  dp3 r3.z, r1.xyzx, r7.xyzx
  max r3.z, r3.z, l(0.000000)
  min r3.z, r3.z, l(1.000000)  // r3.z <- NdotH

#line 52
  dp3 r3.w, r4.xyzx, r7.xyzx
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)  // r3.w <- VdotH

#line 53
  dp3 r4.w, r1.xyzx, r6.xyzx
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)  // r4.w <- NdotL

#line 54
  dp3 r1.x, r1.xyzx, r4.xyzx
  max r1.x, r1.x, l(0.000000)
  min r1.x, r1.x, l(1.000000)  // r1.x <- NdotV

#line 57
  nop 
  mov r2.w, r2.w
  mov r3.z, r3.z

#line 16
  mul r1.y, r3.z, r3.z  // r1.y <- t2

#line 17
  mul r1.z, r3.z, r3.z
  mul r1.z, r3.z, r1.z
  mul r1.z, r3.z, r1.z  // r1.z <- t4

#line 18
  mul r2.w, r2.w, r2.w  // r2.w <- m2

#line 19
  mul r4.x, r2.w, l(4.000000)
  mul r1.z, r1.z, r4.x
  div r1.z, l(1.000000), r1.z  // r1.z <- D

#line 20
  div r2.w, l(-1.000000), r2.w
  mov r4.x, -r1.y
  add r4.x, r4.x, l(1.000000)
  mul r2.w, r2.w, r4.x
  div r1.y, r2.w, r1.y
  mul r1.y, r1.y, l(1.442695)
  exp r1.y, r1.y
  mul r1.y, r1.y, r1.z  // r1.y <- D

#line 21
  mov r1.y, r1.y  // r1.y <- <Beckmann return value>

#line 57
  mov r1.y, r1.y  // r1.y <- D

#line 60
  nop 
  mov r1.w, r1.w
  mov r3.w, r3.w

#line 28
  itof r1.z, l(1)
  mov r2.w, -r1.w
  add r1.z, r1.z, r2.w
  itof r2.w, l(1)
  mov r4.x, -r3.w
  add r2.w, r2.w, r4.x
  mov r4.x, l(1.000000)
  mul r4.x, r2.w, r4.x
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r4.x
  mul r1.z, r1.z, r2.w
  add r1.z, r1.z, r1.w  // r1.z <- <SpcFresnel return value>

#line 60
  mov r1.z, r1.z  // r1.z <- F

#line 63
  itof r1.w, l(2)
  mul r1.w, r3.z, r1.w
  mul r1.w, r1.x, r1.w
  div r1.w, r1.w, r3.w
  itof r2.w, l(2)
  mul r2.w, r3.z, r2.w
  mul r2.w, r4.w, r2.w
  div r2.w, r2.w, r3.w
  min r1.w, r1.w, r2.w
  min r1.w, r1.w, l(1.000000)  // r1.w <- G

#line 66
  mul r0.x, r0.x, r1.x
  mul r0.x, r3.z, r0.x  // r0.x <- m

#line 69
  mul r1.x, r1.y, r1.z
  mul r1.x, r1.w, r1.x
  div r0.x, r1.x, r0.x
  max r0.x, r0.x, l(0.000000)  // r0.x <- <CookTorranceSpecular return value>

#line 147 "C:\Users\2200167\Desktop\個人製作\myme03\myme\HLSL\dir_light_ps.hlsl"
  mul r1.xyz, r0.xxxx, cb2[1].xyzx  // r1.x <- spec.x; r1.y <- spec.y; r1.z <- spec.z

#line 153
  mov r4.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r4.xyz, r0.yzwy, r4.xyzx
  mul r3.xzw, r3.xxxx, r4.xxyz
  add r3.xzw, r3.xxzw, l(1.000000, 0.000000, 1.000000, 1.000000)
  mul r1.xyz, r1.xyzx, r3.xzwx

#line 157
  mov r0.x, -r3.y
  add r0.x, r0.x, l(1.000000)
  mul r2.xyz, r0.xxxx, r2.xyzx
  mul r1.xyz, r3.yyyy, r1.xyzx
  add r1.xyz, r1.xyzx, r2.xyzx
  add r5.xyz, r1.xyzx, r5.xyzx
endif 

#line 164
mov r1.xyz, l(1.000000,1.000000,1.000000,0)  // r1.x <- ambient_light.x; r1.y <- ambient_light.y; r1.z <- ambient_light.z

#line 166
mul r0.xyz, r0.yzwy, r1.xyzx
add r0.xyz, r0.xyzx, r5.xyzx  // r0.x <- lig.x; r0.y <- lig.y; r0.z <- lig.z

#line 169
mov r0.w, l(1.000000)  // r0.w <- final_color.w

#line 170
mov r0.xyz, r0.xyzx  // r0.x <- final_color.x; r0.y <- final_color.y; r0.z <- final_color.z

#line 171
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 289 instruction slots used
