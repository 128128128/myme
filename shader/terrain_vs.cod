//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANTS
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 color;                      // Offset:   64 Size:    16 [unused]
//   float shadow_reciever;             // Offset:   80 Size:     4 [unused]
//   float3 pad;                        // Offset:   84 Size:    12 [unused]
//
// }
//
// cbuffer CAMERA_CONSTANT_BUFFER
// {
//
//   struct CAMERA_CONSTANTS
//   {
//       
//       float4 position;               // Offset:    0
//       float4 direction;              // Offset:   16
//       row_major float4x4 view;       // Offset:   32
//       row_major float4x4 projection; // Offset:   96
//       row_major float4x4 view_projection;// Offset:  160
//       row_major float4x4 inverse_view;// Offset:  224
//       row_major float4x4 inverse_view_projection;// Offset:  288
//
//   } camera_constants;                // Offset:    0 Size:   352
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANTS                  cbuffer      NA          NA            cb0      1 
// CAMERA_CONSTANT_BUFFER            cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// BINORMAL                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// COLOR                    0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// BINORMAL                 0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 0   xy          5     NONE   float   xy  
// COLOR                    0   xyzw        6     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[14], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xyzw
dcl_input v4.xy
dcl_input v5.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xy
dcl_output o6.xyzw
dcl_temps 2
mul r0.xyzw, cb0[1].yyyy, cb1[11].xyzw
mad r0.xyzw, cb0[1].xxxx, cb1[10].xyzw, r0.xyzw
mad r0.xyzw, cb0[1].zzzz, cb1[12].xyzw, r0.xyzw
mad r0.xyzw, cb0[1].wwww, cb1[13].xyzw, r0.xyzw
mul r0.xyzw, r0.xyzw, v0.yyyy
mul r1.xyzw, cb0[0].yyyy, cb1[11].xyzw
mad r1.xyzw, cb0[0].xxxx, cb1[10].xyzw, r1.xyzw
mad r1.xyzw, cb0[0].zzzz, cb1[12].xyzw, r1.xyzw
mad r1.xyzw, cb0[0].wwww, cb1[13].xyzw, r1.xyzw
mad r0.xyzw, v0.xxxx, r1.xyzw, r0.xyzw
mul r1.xyzw, cb0[2].yyyy, cb1[11].xyzw
mad r1.xyzw, cb0[2].xxxx, cb1[10].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].zzzz, cb1[12].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].wwww, cb1[13].xyzw, r1.xyzw
mad r0.xyzw, v0.zzzz, r1.xyzw, r0.xyzw
mul r1.xyzw, cb0[3].yyyy, cb1[11].xyzw
mad r1.xyzw, cb0[3].xxxx, cb1[10].xyzw, r1.xyzw
mad r1.xyzw, cb0[3].zzzz, cb1[12].xyzw, r1.xyzw
mad r1.xyzw, cb0[3].wwww, cb1[13].xyzw, r1.xyzw
mad o0.xyzw, v0.wwww, r1.xyzw, r0.xyzw
mul r0.xyzw, v0.yyyy, cb0[1].xyzw
mad r0.xyzw, v0.xxxx, cb0[0].xyzw, r0.xyzw
mad r0.xyzw, v0.zzzz, cb0[2].xyzw, r0.xyzw
mad o1.xyzw, v0.wwww, cb0[3].xyzw, r0.xyzw
mul r0.xyzw, v1.yyyy, cb0[1].xyzw
mad r0.xyzw, v1.xxxx, cb0[0].xyzw, r0.xyzw
mad r0.xyzw, v1.zzzz, cb0[2].xyzw, r0.xyzw
dp4 r1.x, r0.xyzw, r0.xyzw
rsq r1.x, r1.x
mul o2.xyzw, r0.xyzw, r1.xxxx
mul r0.xyz, v2.yyyy, cb0[1].xyzx
mad r0.xyz, v2.xxxx, cb0[0].xyzx, r0.xyzx
mad r0.xyz, v2.zzzz, cb0[2].xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o3.xyz, r0.wwww, r0.xyzx
mov o3.w, v2.w
mov o4.xyzw, v3.xyzw
mov o5.xy, v4.xyxx
mov o6.xyzw, v5.xyzw
ret 
// Approximately 41 instruction slots used
